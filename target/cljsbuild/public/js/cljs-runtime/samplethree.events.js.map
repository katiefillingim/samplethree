{"version":3,"sources":["samplethree/events.cljs"],"mappings":"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","names":["re_frame.core.reg_event_db","p__56274","vec__56275","cljs.core.nth","db","_","match","old-match","new-match","cljs.core.assoc","reitit.frontend.controllers/apply-controllers","re-frame.core/reg-fx","p__56278","vec__56279","seq__56280","cljs.core/seq","first__56281","cljs.core/first","cljs.core/next","vec__56282","k","params","query","reitit.frontend.easy.push_state","re_frame.core.reg_event_fx","p__56285","vec__56286","url-key","p__56289","vec__56290","key","val","p__56293","vec__56294","result","x","re_frame.core.reg_sub","route","p__56297","vec__56298","docs","ajax.core/raw-response-format","p__56301","vec__56302","error","p__56305","vec__56306"],"sourcesContent":["(ns samplethree.events\r\n  (:require\r\n    [re-frame.core :as rf]\r\n    [ajax.core :as ajax]\r\n    [reitit.frontend.easy :as rfe]\r\n    [reitit.frontend.controllers :as rfc]))\r\n\r\n;;dispatchers\r\n\r\n(rf/reg-event-db\r\n  :common/navigate\r\n  (fn [db [_ match]]\r\n    (let [old-match (:common/route db)\r\n          new-match (assoc match :controllers\r\n                                 (rfc/apply-controllers (:controllers old-match) match))]\r\n      (assoc db :common/route new-match))))\r\n\r\n(rf/reg-fx\r\n  :common/navigate-fx!\r\n  (fn [[k & [params query]]]\r\n    (rfe/push-state k params query)))\r\n\r\n(rf/reg-event-fx\r\n  :common/navigate!\r\n  (fn [_ [_ url-key params query]]\r\n    {:common/navigate-fx! [url-key params query]}))\r\n\r\n(rf/reg-event-db\r\n  :initialize\r\n  (fn [db _]\r\n    (assoc db :x 0\r\n              :y 0\r\n              :op \"+\"\r\n              :result 0\r\n              :color nil)))\r\n\r\n(rf/reg-event-db\r\n  :set-key\r\n  (fn [db [_ key val]]\r\n    (assoc db key val)))\r\n\r\n(rf/reg-event-db\r\n  :reset\r\n  (fn [db _]\r\n    (assoc db :x 0\r\n              :y 0\r\n              :op \"+\"\r\n              :result 0\r\n              :color nil)))\r\n\r\n(rf/reg-event-db\r\n  :color\r\n  (fn[db [_ result]]\r\n      (let [x (-> result)]\r\n        (cond\r\n          (< x 20) (assoc db :color \"#90EE90\")\r\n          (< x 50) (assoc db :color \"#ADD8E6\")\r\n          :else    (assoc db :color \"#FFA07A\")))))\r\n\r\n\r\n\r\n\r\n;;subscriptions\r\n\r\n(rf/reg-sub\r\n  :common/route\r\n  (fn [db _]\r\n    (-> db :common/route)))\r\n\r\n(rf/reg-sub\r\n  :common/page-id\r\n  :<- [:common/route]\r\n  (fn [route _]\r\n    (-> route :data :name)))\r\n\r\n(rf/reg-sub\r\n  :common/page\r\n  :<- [:common/route]\r\n  (fn [route _]\r\n    (-> route :data :view)))\r\n\r\n(rf/reg-sub\r\n  :common/error\r\n  (fn [db _]\r\n    (:common/error db)))\r\n\r\n(rf/reg-event-db\r\n  :set-docs\r\n  (fn [db [_ docs]]\r\n    (assoc db :docs docs)))\r\n\r\n(rf/reg-event-fx\r\n  :fetch-docs\r\n  (fn [_ _]\r\n    {:http-xhrio {:method          :get\r\n                  :uri             \"/docs\"\r\n                  :response-format (ajax/raw-response-format)\r\n                  :on-success       [:set-docs]}}))\r\n\r\n(rf/reg-event-db\r\n  :common/set-error\r\n  (fn [db [_ error]]\r\n    (assoc db :common/error error)))\r\n\r\n(rf/reg-event-fx\r\n  :page/init-home\r\n  (fn [_ _]\r\n    {:dispatch [:fetch-docs]}))\r\n\r\n(rf/reg-sub\r\n  :get-color\r\n  (fn [db _]\r\n    (:color db)))\r\n\r\n(rf/reg-sub\r\n  :get-value\r\n  (fn [db [_ key]]\r\n    (key db)))\r\n\r\n;;(rf/reg-sub\r\n;;  :equation\r\n;;  (fn [db _]\r\n;;    ((str (:x db) \" \" (:op db) \" \" (:y db) (\" = \") (:result db)))))"]}