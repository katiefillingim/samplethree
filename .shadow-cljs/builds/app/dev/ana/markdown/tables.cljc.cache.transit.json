["^ ","~:output",["^ ","~:js","goog.provide('markdown.tables');\r\nmarkdown.tables.parse_table_row = (function markdown$tables$parse_table_row(text){\r\nreturn cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__74305_SHARP_){\r\nreturn cljs.core.identity(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"text\",\"text\",-1790561697),p1__74305_SHARP_], null));\r\n}),cljs.core.map.cljs$core$IFn$_invoke$arity$2(clojure.string.trim,(function (p1__74304_SHARP_){\r\nreturn clojure.string.split.cljs$core$IFn$_invoke$arity$2(p1__74304_SHARP_,/\\|/);\r\n})(clojure.string.trim((function (p1__74303_SHARP_){\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__74303_SHARP_),\"|\")){\r\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str,cljs.core.rest(p1__74303_SHARP_));\r\n} else {\r\nreturn p1__74303_SHARP_;\r\n}\r\n})(text)))));\r\n});\r\nmarkdown.tables.table_row__GT_str = (function markdown$tables$table_row__GT_str(row_data,is_header_QMARK_){\r\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (row,col){\r\nvar alignment_str = (cljs.core.truth_(new cljs.core.Keyword(null,\"alignment\",\"alignment\",1040093386).cljs$core$IFn$_invoke$arity$1(col))?[\" style='text-align:\",cljs.core.name(new cljs.core.Keyword(null,\"alignment\",\"alignment\",1040093386).cljs$core$IFn$_invoke$arity$1(col)),\"'\"].join(''):null);\r\nif(cljs.core.truth_(is_header_QMARK_)){\r\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(row),\"<th\",alignment_str,\">\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"text\",\"text\",-1790561697).cljs$core$IFn$_invoke$arity$1(col)),\"</th>\"].join('');\r\n} else {\r\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(row),\"<td\",alignment_str,\">\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"text\",\"text\",-1790561697).cljs$core$IFn$_invoke$arity$1(col)),\"</td>\"].join('');\r\n}\r\n}),\"\",row_data);\r\n});\r\nmarkdown.tables.table__GT_str = (function markdown$tables$table__GT_str(table){\r\nvar table_data = cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2(cljs.core.vector,new cljs.core.Keyword(null,\"data\",\"data\",-232669377).cljs$core$IFn$_invoke$arity$1(table));\r\nvar alignment_seq = new cljs.core.Keyword(null,\"alignment-seq\",\"alignment-seq\",1587946543).cljs$core$IFn$_invoke$arity$1(table);\r\nreturn [\"<table>\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (table_acc,row){\r\nvar row_idx = cljs.core.first(row);\r\nvar row_data = cljs.core.mapv.cljs$core$IFn$_invoke$arity$3(cljs.core.merge,cljs.core.second(row),alignment_seq);\r\nvar is_header_QMARK_ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(row_idx,(0));\r\nvar is_first_row_QMARK_ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(row_idx,(1));\r\nvar is_last_row_QMARK_ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(row_idx,(cljs.core.count(table_data) - (1)));\r\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(table_acc),((is_header_QMARK_)?\"<thead>\":((is_first_row_QMARK_)?\"<tbody>\":null)),\"<tr>\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(markdown.tables.table_row__GT_str(row_data,is_header_QMARK_)),\"</tr>\",((is_header_QMARK_)?\"</thead>\":((is_last_row_QMARK_)?\"</tbody>\":null))].join('');\r\n}),\"\",table_data)),\"</table>\"].join('');\r\n});\r\nmarkdown.tables.divider_seq__GT_alignment = (function markdown$tables$divider_seq__GT_alignment(divider_seq){\r\nreturn cljs.core.mapv.cljs$core$IFn$_invoke$arity$2((function (divider){\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.re_find(/^:-+/,new cljs.core.Keyword(null,\"text\",\"text\",-1790561697).cljs$core$IFn$_invoke$arity$1(divider)),new cljs.core.Keyword(null,\"text\",\"text\",-1790561697).cljs$core$IFn$_invoke$arity$1(divider))){\r\nreturn cljs.core.identity(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"alignment\",\"alignment\",1040093386),new cljs.core.Keyword(null,\"left\",\"left\",-399115937)], null));\r\n} else {\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.re_find(/^-+:/,new cljs.core.Keyword(null,\"text\",\"text\",-1790561697).cljs$core$IFn$_invoke$arity$1(divider)),new cljs.core.Keyword(null,\"text\",\"text\",-1790561697).cljs$core$IFn$_invoke$arity$1(divider))){\r\nreturn cljs.core.identity(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"alignment\",\"alignment\",1040093386),new cljs.core.Keyword(null,\"right\",\"right\",-452581833)], null));\r\n} else {\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.re_find(/^:-+:/,new cljs.core.Keyword(null,\"text\",\"text\",-1790561697).cljs$core$IFn$_invoke$arity$1(divider)),new cljs.core.Keyword(null,\"text\",\"text\",-1790561697).cljs$core$IFn$_invoke$arity$1(divider))){\r\nreturn cljs.core.identity(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"alignment\",\"alignment\",1040093386),new cljs.core.Keyword(null,\"center\",\"center\",-748944368)], null));\r\n} else {\r\nreturn null;\r\n\r\n}\r\n}\r\n}\r\n}),divider_seq);\r\n});\r\nmarkdown.tables.table = (function markdown$tables$table(text,state){\r\nvar table_row_re = cljs.core.re_find(/\\|(?: [\\S ]+ \\|)+/,text);\r\nvar table_divider_re = cljs.core.re_find(/\\|(?: ?:?-+:? ?\\|)+/,text);\r\nvar is_table_row_QMARK_ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(table_row_re,text);\r\nvar is_table_header_QMARK_ = ((is_table_row_QMARK_) && (cljs.core.not(cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(state,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"table\",\"table\",-564943036),new cljs.core.Keyword(null,\"in-table-body?\",\"in-table-body?\",-136773915)], null)))));\r\nvar is_table_divider_QMARK_ = ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(table_divider_re,text))?(function (){var and__4115__auto__ = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(state,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"table\",\"table\",-564943036),new cljs.core.Keyword(null,\"in-table-body?\",\"in-table-body?\",-136773915)], null));\r\nif(cljs.core.truth_(and__4115__auto__)){\r\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(state,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"table\",\"table\",-564943036),new cljs.core.Keyword(null,\"is-prev-header?\",\"is-prev-header?\",-1637281701)], null));\r\n} else {\r\nreturn and__4115__auto__;\r\n}\r\n})():false);\r\nif(is_table_header_QMARK_){\r\nvar header_seq = markdown.tables.parse_table_row(text);\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"\",cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.assoc_in(cljs.core.assoc_in(state,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"table\",\"table\",-564943036),new cljs.core.Keyword(null,\"is-prev-header?\",\"is-prev-header?\",-1637281701)], null),true),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"table\",\"table\",-564943036),new cljs.core.Keyword(null,\"in-table-body?\",\"in-table-body?\",-136773915)], null),true),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"table\",\"table\",-564943036),new cljs.core.Keyword(null,\"data\",\"data\",-232669377)], null),cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(cljs.core.conj,cljs.core.PersistentVector.EMPTY),cljs.core.vec(header_seq))], null);\r\n} else {\r\nif(cljs.core.truth_(is_table_divider_QMARK_)){\r\nvar divider_seq = markdown.tables.parse_table_row(text);\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"\",cljs.core.assoc_in(cljs.core.assoc_in(state,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"table\",\"table\",-564943036),new cljs.core.Keyword(null,\"is-prev-header?\",\"is-prev-header?\",-1637281701)], null),false),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"table\",\"table\",-564943036),new cljs.core.Keyword(null,\"alignment-seq\",\"alignment-seq\",1587946543)], null),markdown.tables.divider_seq__GT_alignment(divider_seq))], null);\r\n} else {\r\nif(is_table_row_QMARK_){\r\nvar row_seq = markdown.tables.parse_table_row(text);\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"\",cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.assoc_in(state,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"table\",\"table\",-564943036),new cljs.core.Keyword(null,\"is-prev-header?\",\"is-prev-header?\",-1637281701)], null),false),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"table\",\"table\",-564943036),new cljs.core.Keyword(null,\"data\",\"data\",-232669377)], null),cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(cljs.core.conj,cljs.core.PersistentVector.EMPTY),cljs.core.vec(row_seq))], null);\r\n} else {\r\nvar out = ((cljs.core.empty_QMARK_(cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(state,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"table\",\"table\",-564943036),new cljs.core.Keyword(null,\"data\",\"data\",-232669377)], null))))?text:[markdown.tables.table__GT_str(new cljs.core.Keyword(null,\"table\",\"table\",-564943036).cljs$core$IFn$_invoke$arity$1(state)),cljs.core.str.cljs$core$IFn$_invoke$arity$1(text)].join(''));\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [out,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(state,new cljs.core.Keyword(null,\"table\",\"table\",-564943036))], null);\r\n\r\n}\r\n}\r\n}\r\n});\r\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","markdown/tables.cljc","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",20],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$react","~$module$node_modules$react$index","~$react-dom","~$module$node_modules$react_dom$index","~$clojure.pprint","~$cljs.pprint","~$clojure.spec.alpha","~$cljs.spec.alpha","~$clojure.spec.gen.alpha","~$cljs.spec.gen.alpha"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$markdown.tables","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$clojure.string","^Q","~$string","^Q","~$cljs.core","^S","~$goog","^T"],"~:seen",["^J",["~:require"]],"~:uses",null,"~:require-macros",["^ ","^S","^S"],"~:form",["~#list",["~$ns","^L",["^Z",["^V",["^Q","~:as","^R"]]]]],"~:flags",["^ ","^V",["^J",[]]],"~:js-deps",["^ "],"~:deps",["^T","^S","^Q"]],"^N","^L","~:resource-id",["~:shadow.build.classpath/resource","markdown/tables.cljc"],"~:compiled-at",1597165958971,"~:resource-name","markdown/tables.cljc","~:warnings",[],"~:source","(ns markdown.tables\n  (:require [clojure.string :as string]))\n\n(defn parse-table-row [text]\n  (->> text\n       (#(if (= (first %) \\|)\n          (apply str (rest %))\n          %))\n       (string/trim)\n       (#(string/split % #\"\\|\"))\n       (map string/trim)\n       (map #(identity {:text %}))))\n\n(defn table-row->str [row-data is-header?]\n  (reduce\n    (fn [row col]\n      (let [alignment-str (when (:alignment col)\n                            (str \" style='text-align:\" (name (:alignment col)) \"'\"))]\n        (if is-header?\n          (str row \"<th\" alignment-str \">\" (:text col) \"</th>\")\n          (str row \"<td\" alignment-str \">\" (:text col) \"</td>\"))))\n    \"\"\n    row-data))\n\n(defn table->str [table]\n  (let [table-data (map-indexed vector (:data table))\n        alignment-seq (:alignment-seq table)]\n    (str \"<table>\"\n         (reduce\n           (fn [table-acc row]\n             (let [row-idx (first row)\n                   row-data (mapv merge (second row) alignment-seq)\n                   is-header? (= row-idx 0)\n                   is-first-row? (= row-idx 1)\n                   is-last-row? (= row-idx (dec (count table-data)))]\n               (str\n                 table-acc\n                 (cond\n                   is-header?\n                   \"<thead>\"\n                   is-first-row?\n                   \"<tbody>\")\n                 \"<tr>\"\n                 (table-row->str row-data is-header?)\n                 \"</tr>\"\n                 (cond\n                   is-header?\n                   \"</thead>\"\n                   is-last-row?\n                   \"</tbody>\"))))\n           \"\"\n           table-data)\n         \"</table>\")))\n\n(defn divider-seq->alignment [divider-seq]\n  (mapv (fn [divider]\n          (cond\n            (= (re-find #\"^:-+\" (:text divider))\n               (:text divider))\n            (identity {:alignment :left})\n\n            (= (re-find #\"^-+:\" (:text divider))\n               (:text divider))\n            (identity {:alignment :right})\n\n            (= (re-find #\"^:-+:\" (:text divider))\n               (:text divider))\n            (identity {:alignment :center})\n\n            :else\n            nil))\n        divider-seq))\n\n(defn table [text state]\n  (let [table-row-re (re-find #\"\\|(?: [\\S ]+ \\|)+\" text)\n        table-divider-re (re-find #\"\\|(?: ?:?-+:? ?\\|)+\" text)\n        is-table-row? (= table-row-re text)\n        is-table-header?\n        (and is-table-row?\n             (not (get-in state [:table :in-table-body?])))\n        is-table-divider?\n        (and (= table-divider-re text)\n             (get-in state [:table :in-table-body?])\n             (get-in state [:table :is-prev-header?]))]\n    (cond\n      is-table-header?\n      (let [header-seq (parse-table-row text)]\n        [\"\" (-> state\n                (assoc-in [:table :is-prev-header?] true)\n                (assoc-in [:table :in-table-body?] true)\n                (update-in [:table :data] (fnil conj []) (vec header-seq)))])\n\n      is-table-divider?\n      (let [divider-seq (parse-table-row text)]\n        [\"\" (-> state\n                (assoc-in [:table :is-prev-header?] false)\n                (assoc-in [:table :alignment-seq]\n                          (divider-seq->alignment divider-seq)))])\n\n      is-table-row?\n      (let [row-seq (parse-table-row text)]\n        [\"\" (-> state\n                (assoc-in [:table :is-prev-header?] false)\n                (update-in [:table :data] (fnil conj []) (vec row-seq)))])\n\n      :else\n      (let [out (if (empty? (get-in state [:table :data]))\n                  text\n                  (str (table->str (:table state)) text))]\n        [out (dissoc state :table)]))))\n","~:reader-features",["^J",["~:cljs"]],"~:cljc",true,"~:source-map-compact",["^ ","mappings","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","names",["markdown.tables/parse-table-row","text","p1__74303#","cljs.core._EQ_","cljs.core/first","cljs.core.apply","cljs.core/str","cljs.core/rest","clojure.string/trim","p1__74304#","clojure.string.split","cljs.core.map","p1__74305#","cljs.core/identity","markdown.tables/table-row->str","row-data","is-header?","cljs.core.reduce","row","col","alignment-str","cljs.core/name","markdown.tables/table->str","table","table-data","cljs.core.map_indexed","cljs.core/vector","alignment-seq","table-acc","row-idx","cljs.core.mapv","cljs.core/merge","cljs.core/second","is-first-row?","is-last-row?","cljs.core/count","markdown.tables/divider-seq->alignment","divider-seq","divider","cljs.core/re-find","markdown.tables/table","state","table-row-re","table-divider-re","is-table-row?","is-table-header?","cljs.core/not","cljs.core.get_in","is-table-divider?","and__4115__auto__","header-seq","cljs.core/assoc-in","cljs.core.update_in","cljs.core.fnil","cljs.core/conj","cljs.core/vec","row-seq","out","cljs.core/empty?","cljs.core.dissoc"]],"~:used-vars",["^J",["~$cljs.core/rest","~$markdown.tables/table-row->str","~$cljs.core/str","~$clojure.string/split","~$cljs.core/=","~$cljs.core/reduce","~$cljs.core/apply","~$cljs.core/identity","~$cljs.core/mapv","~$cljs.core/dissoc","~$cljs.core/fnil","~$cljs.core/conj","~$cljs.core/map","~$markdown.tables/table","~$cljs.core/re-find","~$markdown.tables/divider-seq->alignment","~$cljs.core/vec","~$markdown.tables/table->str","~$cljs.core/assoc-in","~$clojure.string/trim","~$cljs.core/first","~$markdown.tables/parse-table-row","~$cljs.core/update-in"]]],"~:cache-keys",["~#cmap",[["^15","goog/dom/tagname.js"],["6025affb7181cd40418600864f58eed1ea80055d","~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^J",[]],"~:deps-syms",["^T","~$goog.dom.HtmlElement"]]],["^15","goog/math/math.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1Z",["^ ","^1[",null,"^20",["^J",[]],"^21",["^T","~$goog.array","~$goog.asserts"]]],["^15","goog/html/trustedtypes.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1Z",["^ ","^1[",null,"^20",["^J",[]],"^21",["^T"]]],["^15","goog/labs/useragent/browser.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1Z",["^ ","^1[",null,"^20",["^J",[]],"^21",["^T","^23","~$goog.labs.userAgent.util","~$goog.object","~$goog.string.internal"]]],["^15","goog/html/safeurl.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1Z",["^ ","^1[",null,"^20",["^J",[]],"^21",["^T","^24","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.i18n.bidi.Dir","~$goog.i18n.bidi.DirectionalString","~$goog.string.Const","~$goog.string.TypedString","^27"]]],["^15","goog/array/array.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1Z",["^ ","^1[",null,"^20",["^J",[]],"^21",["^T","^24"]]],["^15","goog/debug/error.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1Z",["^ ","^1[",null,"^20",["^J",[]],"^21",["^T"]]],["^15","goog/dom/nodetype.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1Z",["^ ","^1[",null,"^20",["^J",[]],"^21",["^T"]]],["^15","goog/string/typedstring.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1Z",["^ ","^1[",null,"^20",["^J",[]],"^21",["^T"]]],["^15","goog/object/object.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1Z",["^ ","^1[",null,"^20",["^J",[]],"^21",["^T"]]],["^15","goog/dom/asserts.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1Z",["^ ","^1[",null,"^20",["^J",[]],"^21",["^T","^24"]]],"~:SHADOW-TIMESTAMP",[1596134675000,1596134675000,1594142852000],["^15","goog/math/long.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1Z",["^ ","^1[",null,"^20",["^J",[]],"^21",["^T","^24","~$goog.reflect"]]],["^15","goog/html/trustedresourceurl.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1Z",["^ ","^1[",null,"^20",["^J",[]],"^21",["^T","^24","~$goog.html.trustedtypes","^2:","^2;","^2<","^2="]]],["^15","goog/string/internal.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1Z",["^ ","^1[",null,"^20",["^J",[]],"^21",["^T"]]],["^15","goog/functions/functions.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1Z",["^ ","^1[",null,"^20",["^J",[]],"^21",["^T"]]],["^15","goog/html/safestyle.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1Z",["^ ","^1[",null,"^20",["^J",[]],"^21",["^T","^23","^24","~$goog.html.SafeUrl","^2<","^2=","^27"]]],["^15","goog/dom/safe.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1Z",["^ ","^1[",null,"^20",["^J",[]],"^21",["^T","^24","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","~$goog.html.SafeScript","~$goog.html.SafeStyle","^2A","^29","~$goog.html.uncheckedconversions","^2<","^27"]]],["^15","goog/structs/map.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1Z",["^ ","^1[",null,"^20",["^J",[]],"^21",["^T","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^15","goog/html/safehtml.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1Z",["^ ","^1[",null,"^20",["^J",[]],"^21",["^T","^23","^24","~$goog.dom.TagName","~$goog.dom.tags","^2E","^2F","~$goog.html.SafeStyleSheet","^2A","^29","^2@","^2:","^2;","~$goog.labs.userAgent.browser","^26","^2<","^2=","^27"]]],["^15","goog/dom/tags.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1Z",["^ ","^1[",null,"^20",["^J",[]],"^21",["^T","^26"]]],["^15","goog/asserts/asserts.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1Z",["^ ","^1[",null,"^20",["^J",[]],"^21",["^T","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^15","goog/uri/uri.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1Z",["^ ","^1[",null,"^20",["^J",[]],"^21",["^T","^23","^24","~$goog.string","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^15","goog/i18n/bidi.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1Z",["^ ","^1[",null,"^20",["^J",[]],"^21",["^T"]]],["^15","markdown/tables.cljc"],["c28b65ccc617b6c356403c4c3d9a9e0ca9bd4dd7","^1Z",["^ ","^1[",null,"^20",["^J",[]],"^21",["^T","^S","^Q"]]],["^15","goog/fs/url.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1Z",["^ ","^1[",null,"^20",["^J",[]],"^21",["^T"]]],["^15","goog/base.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1Z",["^ ","^1[",null,"^20",["^J",[]],"^21",[]]],["^15","goog/structs/structs.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1Z",["^ ","^1[",null,"^20",["^J",[]],"^21",["^T","^23","^26"]]],["^15","clojure/string.cljs"],["9f9729dbbf9b814c83dc189977b447d2ae92b6cd","^1Z",["^ ","^1[",null,"^20",["^J",[]],"^21",["^T","^S","^2P","~$goog.string.StringBuffer"]]],["^15","goog/string/string.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1Z",["^ ","^1[",null,"^20",["^J",[]],"^21",["^T","~$goog.dom.safe","^2G","^2<","^27"]]],["^15","goog/reflect/reflect.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1Z",["^ ","^1[",null,"^20",["^J",[]],"^21",["^T"]]],["^15","goog/labs/useragent/util.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1Z",["^ ","^1[",null,"^20",["^J",[]],"^21",["^T","^27"]]],["^15","goog/string/stringbuffer.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1Z",["^ ","^1[",null,"^20",["^J",[]],"^21",["^T"]]],["^15","goog/iter/iter.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1Z",["^ ","^1[",null,"^20",["^J",[]],"^21",["^T","^23","^24","^2C","~$goog.math"]]],["^15","goog/html/uncheckedconversions.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1Z",["^ ","^1[",null,"^20",["^J",[]],"^21",["^T","^24","^2D","^2E","^2F","^2L","^2A","^29","^2<","^27"]]],["^15","goog/dom/htmlelement.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1Z",["^ ","^1[",null,"^20",["^J",[]],"^21",["^T"]]],["^15","cljs/core.cljs"],["9f9729dbbf9b814c83dc189977b447d2ae92b6cd","^1Z",["^ ","^1[",null,"^20",["^J",[]],"^21",["^T","~$goog.math.Long","~$goog.math.Integer","^2P","^26","^23","~$goog.Uri","^2V"]]],["^15","goog/html/safescript.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1Z",["^ ","^1[",null,"^20",["^J",[]],"^21",["^T","^24","^2@","^2<","^2="]]],["^15","goog/html/safestylesheet.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1Z",["^ ","^1[",null,"^20",["^J",[]],"^21",["^T","^23","^24","^2F","^26","^2<","^2=","^27"]]],["^15","goog/math/integer.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1Z",["^ ","^1[",null,"^20",["^J",[]],"^21",["^T","^2?"]]],["^15","goog/uri/utils.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1Z",["^ ","^1[",null,"^20",["^J",[]],"^21",["^T","^23","^24","^2P"]]],["^15","goog/string/const.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1Z",["^ ","^1[",null,"^20",["^J",[]],"^21",["^T","^24","^2="]]]]],"~:clj-info",["^ ","jar:file:/C:/Users/BlackHammer09/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/source_map.clj",1594142852000,"jar:file:/C:/Users/BlackHammer09/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/js_deps.cljc",1594142852000,"jar:file:/C:/Users/BlackHammer09/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/analyzer.cljc",1594142852000,"jar:file:/C:/Users/BlackHammer09/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/edn.clj",1592834825000,"jar:file:/C:/Users/BlackHammer09/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/instant.clj",1592834825000,"jar:file:/C:/Users/BlackHammer09/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/externs.clj",1594142852000,"jar:file:/C:/Users/BlackHammer09/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/tagged_literals.cljc",1594142852000,"jar:file:/C:/Users/BlackHammer09/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/set.clj",1592834825000,"jar:file:/C:/Users/BlackHammer09/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/pprint.clj",1592834825000,"jar:file:/C:/Users/BlackHammer09/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader.clj",1594142850000,"jar:file:/C:/Users/BlackHammer09/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/reader_types.clj",1594142850000,"jar:file:/C:/Users/BlackHammer09/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/string.clj",1592834825000,"jar:file:/C:/Users/BlackHammer09/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/default_data_readers.clj",1594142850000,"jar:file:/C:/Users/BlackHammer09/.m2/repository/org/clojure/data.json/0.2.6/data.json-0.2.6.jar!/clojure/data/json.clj",1594134806000,"jar:file:/C:/Users/BlackHammer09/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/util.cljc",1594142852000,"jar:file:/C:/Users/BlackHammer09/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/java/io.clj",1592834825000,"jar:file:/C:/Users/BlackHammer09/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/core.cljc",1594142852000,"jar:file:/C:/Users/BlackHammer09/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/source_map/base64.clj",1594142852000,"jar:file:/C:/Users/BlackHammer09/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/source_map/base64_vlq.clj",1594142852000,"jar:file:/C:/Users/BlackHammer09/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/compiler.cljc",1594142852000,"jar:file:/C:/Users/BlackHammer09/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/core.clj",1592834825000,"jar:file:/C:/Users/BlackHammer09/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/impl/inspect.clj",1594142850000,"jar:file:/C:/Users/BlackHammer09/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/env.cljc",1594142852000,"jar:file:/C:/Users/BlackHammer09/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/impl/errors.clj",1594142850000,"jar:file:/C:/Users/BlackHammer09/.m2/repository/binaryage/devtools/1.0.2/devtools-1.0.2.jar!/devtools/defaults.clj",1594142858000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","markdown/tables.cljc","^7",1,"^8",5,"^9",1,"^:",20],"^;",["^ ","^<","^=","^>","^?","^@","^A","^B","^C","^D","^E","^F","^G"],"^H",null,"^I",["^J",[]],"^K","^L","^O",null,"^P",["^ ","^Q","^Q","^R","^Q","^S","^S","^T","^T"],"^U",["^J",["^V"]],"^W",null,"~:defs",["^ ","~$parse-table-row",["^ ","~:protocol-inline",null,"^5",["^ ","^6","markdown/tables.cljc","^7",4,"^8",7,"^9",4,"^:",22,"~:arglists",["^Z",["~$quote",["^Z",[["~$text"]]]]]],"^K","^1V","^6","markdown/tables.cljc","^:",22,"~:method-params",["^Z",[["^3P"]]],"~:protocol-impl",null,"~:arglists-meta",["^Z",[null,null]],"^8",1,"~:variadic?",false,"^7",4,"~:ret-tag","~$cljs.core/LazySeq","^9",4,"~:max-fixed-arity",1,"~:fn-var",true,"^3N",["^Z",["^3O",["^Z",[["^3P"]]]]]],"~$table-row->str",["^ ","^3M",null,"^5",["^ ","^6","markdown/tables.cljc","^7",14,"^8",7,"^9",14,"^:",21,"^3N",["^Z",["^3O",["^Z",[["~$row-data","~$is-header?"]]]]]],"^K","^1B","^6","markdown/tables.cljc","^:",21,"^3Q",["^Z",[["^3Z","^3["]]],"^3R",null,"^3S",["^Z",[null,null]],"^8",1,"^3T",false,"^7",14,"^3U",["^J",[null,"~$any"]],"^9",14,"^3W",2,"^3X",true,"^3N",["^Z",["^3O",["^Z",[["^3Z","^3["]]]]]],"~$table->str",["^ ","^3M",null,"^5",["^ ","^6","markdown/tables.cljc","^7",25,"^8",7,"^9",25,"^:",17,"^3N",["^Z",["^3O",["^Z",[["~$table"]]]]]],"^K","^1R","^6","markdown/tables.cljc","^:",17,"^3Q",["^Z",[["^42"]]],"^3R",null,"^3S",["^Z",[null,null]],"^8",1,"^3T",false,"^7",25,"^3U","^R","^9",25,"^3W",1,"^3X",true,"^3N",["^Z",["^3O",["^Z",[["^42"]]]]]],"~$divider-seq->alignment",["^ ","^3M",null,"^5",["^ ","^6","markdown/tables.cljc","^7",55,"^8",7,"^9",55,"^:",29,"^3N",["^Z",["^3O",["^Z",[["~$divider-seq"]]]]]],"^K","^1P","^6","markdown/tables.cljc","^:",29,"^3Q",["^Z",[["^44"]]],"^3R",null,"^3S",["^Z",[null,null]],"^8",1,"^3T",false,"^7",55,"^3U","~$clj","^9",55,"^3W",1,"^3X",true,"^3N",["^Z",["^3O",["^Z",[["^44"]]]]]],"^42",["^ ","^3M",null,"^5",["^ ","^6","markdown/tables.cljc","^7",74,"^8",7,"^9",74,"^:",12,"^3N",["^Z",["^3O",["^Z",[["^3P","~$state"]]]]]],"^K","^1N","^6","markdown/tables.cljc","^:",12,"^3Q",["^Z",[["^3P","^46"]]],"^3R",null,"^3S",["^Z",[null,null]],"^8",1,"^3T",false,"^7",74,"^3U","~$cljs.core/IVector","^9",74,"^3W",2,"^3X",true,"^3N",["^Z",["^3O",["^Z",[["^3P","^46"]]]]]]],"^X",["^ ","^S","^S"],"~:cljs.analyzer/constants",["^ ","^U",["^J",["~:table","~:in-table-body?","~:else","~:alignment","~:alignment-seq","~:center","~:right","~:is-prev-header?","~:left","~:text","~:data"]],"~:order",["^4B","^4<","^4C","^4=","^4A","^4?","^4>","^4;","^49","^4:","^4@"]],"^11",["^ ","^V",["^J",[]]],"^12",["^ "],"^13",["^T","^S","^Q"]],"^N","^L","~:ns-specs",["^ "],"~:ns-spec-vars",["^J",[]],"~:compiler-options",["^1Y",[["^4G","~:static-fns"],true,["^4G","~:shadow-tweaks"],null,["^4G","~:source-map-inline"],null,["^4G","~:elide-asserts"],false,["^4G","~:optimize-constants"],null,["^4G","^18"],null,["^4G","~:external-config"],null,["^4G","~:tooling-config"],null,["^4G","~:emit-constants"],null,["^4G","~:load-tests"],null,["^4G","~:form-size-threshold"],null,["^4G","~:data-readers"],null,["^4G","~:infer-externs"],"~:auto",["^4G","^1:"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^4G","~:fn-invoke-direct"],null,["^4G","~:source-map"],"/dev/null"]]]