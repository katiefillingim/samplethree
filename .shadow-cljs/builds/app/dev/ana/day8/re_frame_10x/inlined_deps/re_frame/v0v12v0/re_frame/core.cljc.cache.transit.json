["^ ","~:output",["^ ","~:js","goog.provide('day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core');\r\nday8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.dispatch = day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.router.dispatch;\r\nday8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.dispatch_sync = day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.router.dispatch_sync;\r\nday8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.reg_sub = day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.subs.reg_sub;\r\nday8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.subscribe = day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.subs.subscribe;\r\nday8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.clear_sub = cljs.core.partial.cljs$core$IFn$_invoke$arity$2(day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.registrar.clear_handlers,day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.subs.kind);\r\nday8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.clear_subscription_cache_BANG_ = day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.subs.clear_subscription_cache_BANG_;\r\n/**\r\n * This is a low level, advanced function.  You should probably be\r\n *   using reg-sub instead.\r\n *   Docs in https://github.com/day8/re-frame/blob/master/docs/SubscriptionFlow.md\r\n */\r\nday8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.reg_sub_raw = (function day8$re_frame_10x$inlined_deps$re_frame$v0v12v0$re_frame$core$reg_sub_raw(query_id,handler_fn){\r\nreturn day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.registrar.register_handler(day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.subs.kind,query_id,handler_fn);\r\n});\r\nday8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.reg_fx = day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.fx.reg_fx;\r\nday8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.clear_fx = cljs.core.partial.cljs$core$IFn$_invoke$arity$2(day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.registrar.clear_handlers,day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.fx.kind);\r\nday8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.reg_cofx = day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.cofx.reg_cofx;\r\nday8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.inject_cofx = day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.cofx.inject_cofx;\r\nday8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.clear_cofx = cljs.core.partial.cljs$core$IFn$_invoke$arity$2(day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.registrar.clear_handlers,day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.cofx.kind);\r\n/**\r\n * Register the given event `handler` (function) for the given `id`. Optionally, provide\r\n *   an `interceptors` chain.\r\n *   `id` is typically a namespaced keyword  (but can be anything)\r\n *   `handler` is a function: (db event) -> db\r\n *   `interceptors` is a collection of interceptors. Will be flattened and nils removed.\r\n *   `handler` is wrapped in its own interceptor and added to the end of the interceptor\r\n * chain, so that, in the end, only a chain is registered.\r\n * Special effects and coeffects interceptors are added to the front of this\r\n * chain.\r\n */\r\nday8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.reg_event_db = (function day8$re_frame_10x$inlined_deps$re_frame$v0v12v0$re_frame$core$reg_event_db(var_args){\r\nvar G__61319 = arguments.length;\r\nswitch (G__61319) {\r\ncase 2:\r\nreturn day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.reg_event_db.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ncase 3:\r\nreturn day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.reg_event_db.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\r\n\r\n}\r\n});\r\n\r\n(day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.reg_event_db.cljs$core$IFn$_invoke$arity$2 = (function (id,handler){\r\nreturn day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.reg_event_db.cljs$core$IFn$_invoke$arity$3(id,null,handler);\r\n}));\r\n\r\n(day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.reg_event_db.cljs$core$IFn$_invoke$arity$3 = (function (id,interceptors,handler){\r\nreturn day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.events.register(id,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.cofx.inject_db,day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.fx.do_fx,interceptors,day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.std_interceptors.db_handler__GT_interceptor(handler)], null));\r\n}));\r\n\r\n(day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.reg_event_db.cljs$lang$maxFixedArity = 3);\r\n\r\n/**\r\n * Register the given event `handler` (function) for the given `id`. Optionally, provide\r\n *   an `interceptors` chain.\r\n *   `id` is typically a namespaced keyword  (but can be anything)\r\n *   `handler` is a function: (coeffects-map event-vector) -> effects-map\r\n *   `interceptors` is a collection of interceptors. Will be flattened and nils removed.\r\n *   `handler` is wrapped in its own interceptor and added to the end of the interceptor\r\n * chain, so that, in the end, only a chain is registered.\r\n * Special effects and coeffects interceptors are added to the front of the\r\n * interceptor chain.  These interceptors inject the value of app-db into coeffects,\r\n * and, later, action effects.\r\n */\r\nday8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.reg_event_fx = (function day8$re_frame_10x$inlined_deps$re_frame$v0v12v0$re_frame$core$reg_event_fx(var_args){\r\nvar G__61329 = arguments.length;\r\nswitch (G__61329) {\r\ncase 2:\r\nreturn day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.reg_event_fx.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ncase 3:\r\nreturn day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.reg_event_fx.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\r\n\r\n}\r\n});\r\n\r\n(day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.reg_event_fx.cljs$core$IFn$_invoke$arity$2 = (function (id,handler){\r\nreturn day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.reg_event_fx.cljs$core$IFn$_invoke$arity$3(id,null,handler);\r\n}));\r\n\r\n(day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.reg_event_fx.cljs$core$IFn$_invoke$arity$3 = (function (id,interceptors,handler){\r\nreturn day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.events.register(id,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.cofx.inject_db,day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.fx.do_fx,interceptors,day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.std_interceptors.fx_handler__GT_interceptor(handler)], null));\r\n}));\r\n\r\n(day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.reg_event_fx.cljs$lang$maxFixedArity = 3);\r\n\r\n/**\r\n * Register the given event `handler` (function) for the given `id`. Optionally, provide\r\n *   an `interceptors` chain.\r\n *   `id` is typically a namespaced keyword  (but can be anything)\r\n *   `handler` is a function: (context-map event-vector) -> context-map\r\n * \r\n *   This form of registration is almost never used. \r\n */\r\nday8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.reg_event_ctx = (function day8$re_frame_10x$inlined_deps$re_frame$v0v12v0$re_frame$core$reg_event_ctx(var_args){\r\nvar G__61347 = arguments.length;\r\nswitch (G__61347) {\r\ncase 2:\r\nreturn day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.reg_event_ctx.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ncase 3:\r\nreturn day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.reg_event_ctx.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\r\n\r\n}\r\n});\r\n\r\n(day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.reg_event_ctx.cljs$core$IFn$_invoke$arity$2 = (function (id,handler){\r\nreturn day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.reg_event_ctx.cljs$core$IFn$_invoke$arity$3(id,null,handler);\r\n}));\r\n\r\n(day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.reg_event_ctx.cljs$core$IFn$_invoke$arity$3 = (function (id,interceptors,handler){\r\nreturn day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.events.register(id,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.cofx.inject_db,day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.fx.do_fx,interceptors,day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.std_interceptors.ctx_handler__GT_interceptor(handler)], null));\r\n}));\r\n\r\n(day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.reg_event_ctx.cljs$lang$maxFixedArity = 3);\r\n\r\nday8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.clear_event = cljs.core.partial.cljs$core$IFn$_invoke$arity$2(day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.registrar.clear_handlers,day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.events.kind);\r\nday8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.debug = day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.std_interceptors.debug;\r\nday8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.path = day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.std_interceptors.path;\r\nday8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.enrich = day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.std_interceptors.enrich;\r\nday8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.trim_v = day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.std_interceptors.trim_v;\r\nday8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.after = day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.std_interceptors.after;\r\nday8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.on_changes = day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.std_interceptors.on_changes;\r\nday8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.__GT_interceptor = day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.interceptor.__GT_interceptor;\r\nday8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.get_coeffect = day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.interceptor.get_coeffect;\r\nday8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.assoc_coeffect = day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.interceptor.assoc_coeffect;\r\nday8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.get_effect = day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.interceptor.get_effect;\r\nday8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.assoc_effect = day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.interceptor.assoc_effect;\r\nday8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.enqueue = day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.interceptor.enqueue;\r\nday8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.set_loggers_BANG_ = day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.loggers.set_loggers_BANG_;\r\nday8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.console = day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.loggers.console;\r\n/**\r\n * Checkpoints the state of re-frame and returns a function which, when\r\n *   later called, will restore re-frame to that checkpointed state.\r\n * \r\n *   Checkpoint includes app-db, all registered handlers and all subscriptions.\r\n *   \r\n */\r\nday8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.make_restore_fn = (function day8$re_frame_10x$inlined_deps$re_frame$v0v12v0$re_frame$core$make_restore_fn(){\r\nvar handlers = cljs.core.deref(day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.registrar.kind__GT_id__GT_handler);\r\nvar app_db = cljs.core.deref(day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.db.app_db);\r\nvar subs_cache = cljs.core.deref(day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.subs.query__GT_reaction);\r\nreturn (function (){\r\nvar original_subs_61379 = cljs.core.set(cljs.core.vals(subs_cache));\r\nvar current_subs_61380 = cljs.core.set(cljs.core.vals(cljs.core.deref(day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.subs.query__GT_reaction)));\r\nvar seq__61356_61381 = cljs.core.seq(clojure.set.difference.cljs$core$IFn$_invoke$arity$2(current_subs_61380,original_subs_61379));\r\nvar chunk__61357_61382 = null;\r\nvar count__61358_61383 = (0);\r\nvar i__61359_61384 = (0);\r\nwhile(true){\r\nif((i__61359_61384 < count__61358_61383)){\r\nvar sub_61385 = chunk__61357_61382.cljs$core$IIndexed$_nth$arity$2(null,i__61359_61384);\r\nday8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.interop.dispose_BANG_(sub_61385);\r\n\r\n\r\nvar G__61386 = seq__61356_61381;\r\nvar G__61387 = chunk__61357_61382;\r\nvar G__61388 = count__61358_61383;\r\nvar G__61389 = (i__61359_61384 + (1));\r\nseq__61356_61381 = G__61386;\r\nchunk__61357_61382 = G__61387;\r\ncount__61358_61383 = G__61388;\r\ni__61359_61384 = G__61389;\r\ncontinue;\r\n} else {\r\nvar temp__5735__auto___61390 = cljs.core.seq(seq__61356_61381);\r\nif(temp__5735__auto___61390){\r\nvar seq__61356_61391__$1 = temp__5735__auto___61390;\r\nif(cljs.core.chunked_seq_QMARK_(seq__61356_61391__$1)){\r\nvar c__4556__auto___61392 = cljs.core.chunk_first(seq__61356_61391__$1);\r\nvar G__61393 = cljs.core.chunk_rest(seq__61356_61391__$1);\r\nvar G__61394 = c__4556__auto___61392;\r\nvar G__61395 = cljs.core.count(c__4556__auto___61392);\r\nvar G__61396 = (0);\r\nseq__61356_61381 = G__61393;\r\nchunk__61357_61382 = G__61394;\r\ncount__61358_61383 = G__61395;\r\ni__61359_61384 = G__61396;\r\ncontinue;\r\n} else {\r\nvar sub_61399 = cljs.core.first(seq__61356_61391__$1);\r\nday8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.interop.dispose_BANG_(sub_61399);\r\n\r\n\r\nvar G__61400 = cljs.core.next(seq__61356_61391__$1);\r\nvar G__61401 = null;\r\nvar G__61402 = (0);\r\nvar G__61403 = (0);\r\nseq__61356_61381 = G__61400;\r\nchunk__61357_61382 = G__61401;\r\ncount__61358_61383 = G__61402;\r\ni__61359_61384 = G__61403;\r\ncontinue;\r\n}\r\n} else {\r\n}\r\n}\r\nbreak;\r\n}\r\n\r\ncljs.core.reset_BANG_(day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.registrar.kind__GT_id__GT_handler,handlers);\r\n\r\ncljs.core.reset_BANG_(day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.db.app_db,app_db);\r\n\r\nreturn null;\r\n});\r\n});\r\n/**\r\n * Remove all events queued for processing\r\n */\r\nday8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.purge_event_queue = (function day8$re_frame_10x$inlined_deps$re_frame$v0v12v0$re_frame$core$purge_event_queue(){\r\nreturn day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.router.event_queue.day8$re_frame_10x$inlined_deps$re_frame$v0v12v0$re_frame$router$IEventQueue$purge$arity$1(null);\r\n});\r\n/**\r\n * Registers a function `f` to be called after each event is processed\r\n * `f` will be called with two arguments:\r\n *  - `event`: a vector. The event just processed.\r\n *  - `queue`: a PersistentQueue, possibly empty, of events yet to be processed.\r\n * \r\n * This is useful in advanced cases like:\r\n *   - you are implementing a complex bootstrap pipeline\r\n *   - you want to create your own handling infrastructure, with perhaps multiple\r\n *     handlers for the one event, etc.  Hook in here.\r\n *   - libraries providing 'isomorphic javascript' rendering on  Nodejs or Nashorn.\r\n * \r\n *   'id' is typically a keyword. Supplied at \"add time\" so it can subsequently\r\n *   be used at \"remove time\" to get rid of the right callback.\r\n *   \r\n */\r\nday8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.add_post_event_callback = (function day8$re_frame_10x$inlined_deps$re_frame$v0v12v0$re_frame$core$add_post_event_callback(var_args){\r\nvar G__61361 = arguments.length;\r\nswitch (G__61361) {\r\ncase 1:\r\nreturn day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.add_post_event_callback.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ncase 2:\r\nreturn day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.add_post_event_callback.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\r\n\r\n}\r\n});\r\n\r\n(day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.add_post_event_callback.cljs$core$IFn$_invoke$arity$1 = (function (f){\r\nreturn day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.add_post_event_callback.cljs$core$IFn$_invoke$arity$2(f,f);\r\n}));\r\n\r\n(day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.add_post_event_callback.cljs$core$IFn$_invoke$arity$2 = (function (id,f){\r\nreturn day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.router.event_queue.day8$re_frame_10x$inlined_deps$re_frame$v0v12v0$re_frame$router$IEventQueue$add_post_event_callback$arity$3(null,id,f);\r\n}));\r\n\r\n(day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.add_post_event_callback.cljs$lang$maxFixedArity = 2);\r\n\r\nday8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.remove_post_event_callback = (function day8$re_frame_10x$inlined_deps$re_frame$v0v12v0$re_frame$core$remove_post_event_callback(id){\r\nreturn day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.router.event_queue.day8$re_frame_10x$inlined_deps$re_frame$v0v12v0$re_frame$router$IEventQueue$remove_post_event_callback$arity$2(null,id);\r\n});\r\nday8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.register_handler = (function day8$re_frame_10x$inlined_deps$re_frame$v0v12v0$re_frame$core$register_handler(var_args){\r\nvar args__4742__auto__ = [];\r\nvar len__4736__auto___61414 = arguments.length;\r\nvar i__4737__auto___61415 = (0);\r\nwhile(true){\r\nif((i__4737__auto___61415 < len__4736__auto___61414)){\r\nargs__4742__auto__.push((arguments[i__4737__auto___61415]));\r\n\r\nvar G__61417 = (i__4737__auto___61415 + (1));\r\ni__4737__auto___61415 = G__61417;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4743__auto__ = ((((0) < args__4742__auto__.length))?(new cljs.core.IndexedSeq(args__4742__auto__.slice((0)),(0),null)):null);\r\nreturn day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.register_handler.cljs$core$IFn$_invoke$arity$variadic(argseq__4743__auto__);\r\n});\r\n\r\n(day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.register_handler.cljs$core$IFn$_invoke$arity$variadic = (function (args){\r\nvar G__61363_61420 = new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552);\r\nvar G__61364_61421 = \"re-frame:  \\\"register-handler\\\" has been renamed \\\"reg-event-db\\\" (look for registration of\";\r\nvar G__61365_61422 = cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(args));\r\nvar G__61366_61423 = \")\";\r\n(day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.console.cljs$core$IFn$_invoke$arity$4 ? day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.console.cljs$core$IFn$_invoke$arity$4(G__61363_61420,G__61364_61421,G__61365_61422,G__61366_61423) : day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.console.call(null,G__61363_61420,G__61364_61421,G__61365_61422,G__61366_61423));\r\n\r\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.reg_event_db,args);\r\n}));\r\n\r\n(day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.register_handler.cljs$lang$maxFixedArity = (0));\r\n\r\n/** @this {Function} */\r\n(day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.register_handler.cljs$lang$applyTo = (function (seq61362){\r\nvar self__4724__auto__ = this;\r\nreturn self__4724__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq61362));\r\n}));\r\n\r\nday8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.register_sub = (function day8$re_frame_10x$inlined_deps$re_frame$v0v12v0$re_frame$core$register_sub(var_args){\r\nvar args__4742__auto__ = [];\r\nvar len__4736__auto___61430 = arguments.length;\r\nvar i__4737__auto___61432 = (0);\r\nwhile(true){\r\nif((i__4737__auto___61432 < len__4736__auto___61430)){\r\nargs__4742__auto__.push((arguments[i__4737__auto___61432]));\r\n\r\nvar G__61434 = (i__4737__auto___61432 + (1));\r\ni__4737__auto___61432 = G__61434;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4743__auto__ = ((((0) < args__4742__auto__.length))?(new cljs.core.IndexedSeq(args__4742__auto__.slice((0)),(0),null)):null);\r\nreturn day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.register_sub.cljs$core$IFn$_invoke$arity$variadic(argseq__4743__auto__);\r\n});\r\n\r\n(day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.register_sub.cljs$core$IFn$_invoke$arity$variadic = (function (args){\r\nvar G__61368_61436 = new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552);\r\nvar G__61369_61437 = \"re-frame:  \\\"register-sub\\\" is deprecated. Use \\\"reg-sub-raw\\\" (look for registration of\";\r\nvar G__61370_61438 = cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(args));\r\nvar G__61371_61439 = \")\";\r\n(day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.console.cljs$core$IFn$_invoke$arity$4 ? day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.console.cljs$core$IFn$_invoke$arity$4(G__61368_61436,G__61369_61437,G__61370_61438,G__61371_61439) : day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.console.call(null,G__61368_61436,G__61369_61437,G__61370_61438,G__61371_61439));\r\n\r\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.reg_sub_raw,args);\r\n}));\r\n\r\n(day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.register_sub.cljs$lang$maxFixedArity = (0));\r\n\r\n/** @this {Function} */\r\n(day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.register_sub.cljs$lang$applyTo = (function (seq61367){\r\nvar self__4724__auto__ = this;\r\nreturn self__4724__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq61367));\r\n}));\r\n\r\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",66],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$react","~$module$node_modules$react$index","~$react-dom","~$module$node_modules$react_dom$index","~$clojure.pprint","~$cljs.pprint","~$clojure.spec.alpha","~$cljs.spec.alpha","~$clojure.spec.gen.alpha","~$cljs.spec.gen.alpha"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.core","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.router","^Q","~$subs","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.subs","~$set","~$clojure.set","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.cofx","^V","~$cofx","^V","~$fx","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.fx","^S","^S","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.registrar","^Z","~$loggers","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.loggers","^Y","^Y","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.interceptor","^11","~$cljs.core","^12","~$interceptor","^11","^10","^10","~$goog","^14","~$router","^Q","~$db","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.db","~$registrar","^Z","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.std-interceptors","^19","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.interop","^1:","^U","^U","~$events","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.events","^17","^17","^1<","^1<","~$interop","^1:","~$std-interceptors","^19"],"~:seen",["^J",["~:require"]],"~:uses",["^ ","~$db-handler->interceptor","^19","~$fx-handler->interceptor","^19","~$ctx-handler->interceptor","^19"],"~:require-macros",["^ ","^12","^12"],"~:form",["~#list",["~$ns","^L",["^1G",["^1@",["^1<","~:as","^1;"],["^S","^1I","^R"],["^1:","^1I","^1="],["^17","^1I","^16"],["^Y","^1I","^X"],["^V","^1I","^W"],["^Q","^1I","^15"],["^10","^1I","^["],["^Z","^1I","^18"],["^11","^1I","^13"],["^19","^1I","^1>","~:refer",["^1B","^1C","^1D"]],["^U","^1I","^T"]]]]],"~:flags",["^ ","^1@",["^J",[]]],"~:js-deps",["^ "],"~:deps",["^14","^12","^1<","^S","^1:","^17","^Y","^V","^Q","^10","^Z","^11","^19","^U"]],"^N","^L","~:resource-id",["~:shadow.build.classpath/resource","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc"],"~:compiled-at",1597165880785,"~:resource-name","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","~:warnings",[],"~:source","(ns day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.core\n  (:require\n    [day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.events           :as events]\n    [day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.subs             :as subs]\n    [day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.interop          :as interop]\n    [day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.db               :as db]\n    [day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.fx               :as fx]\n    [day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.cofx             :as cofx]\n    [day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.router           :as router]\n    [day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.loggers          :as loggers]\n    [day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.registrar        :as registrar]\n    [day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.interceptor      :as interceptor]\n    [day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.std-interceptors :as std-interceptors :refer [db-handler->interceptor\n                                                                                                            fx-handler->interceptor\n                                                                                                            ctx-handler->interceptor]]\n    [clojure.set               :as set]))\n\n\n;; -- API ---------------------------------------------------------------------\n;;\n;; This namespace represents the re-frame API\n;;\n;; Below, you'll see we've used this technique:\n;;   (def  api-name-for-fn    deeper.namespace/where-the-defn-is)\n;;\n;; So, we promote a `defn` in a deeper namespace \"up\" to the API\n;; via a `def` in this namespace.\n;;\n;; Turns out, this approach makes it hard:\n;;   - to auto-generate API docs\n;;   - for IDEs to provide code completion on functions in the API\n;;\n;; Which is annoying. But there are pros and cons and we haven't\n;; yet revisited the decision.  To compensate, we've added more nudity\n;; to the docs.\n;;\n\n\n;; -- dispatch ----------------------------------------------------------------\n(def dispatch       router/dispatch)\n(def dispatch-sync  router/dispatch-sync)\n\n\n;; -- subscriptions -----------------------------------------------------------\n(def reg-sub        subs/reg-sub)\n(def subscribe      subs/subscribe)\n\n(def clear-sub (partial registrar/clear-handlers subs/kind))  ;; think unreg-sub\n(def clear-subscription-cache! subs/clear-subscription-cache!)\n\n(defn reg-sub-raw\n  \"This is a low level, advanced function.  You should probably be\n  using reg-sub instead.\n  Docs in https://github.com/day8/re-frame/blob/master/docs/SubscriptionFlow.md\"\n  [query-id handler-fn]\n  (registrar/register-handler subs/kind query-id handler-fn))\n\n\n;; -- effects -----------------------------------------------------------------\n(def reg-fx      fx/reg-fx)\n(def clear-fx    (partial registrar/clear-handlers fx/kind))  ;; think unreg-fx\n\n;; -- coeffects ---------------------------------------------------------------\n(def reg-cofx    cofx/reg-cofx)\n(def inject-cofx cofx/inject-cofx)\n(def clear-cofx (partial registrar/clear-handlers cofx/kind)) ;; think unreg-cofx\n\n\n;; -- Events ------------------------------------------------------------------\n\n(defn reg-event-db\n  \"Register the given event `handler` (function) for the given `id`. Optionally, provide\n  an `interceptors` chain.\n  `id` is typically a namespaced keyword  (but can be anything)\n  `handler` is a function: (db event) -> db\n  `interceptors` is a collection of interceptors. Will be flattened and nils removed.\n  `handler` is wrapped in its own interceptor and added to the end of the interceptor\n   chain, so that, in the end, only a chain is registered.\n   Special effects and coeffects interceptors are added to the front of this\n   chain.\"\n  ([id handler]\n    (reg-event-db id nil handler))\n  ([id interceptors handler]\n   (events/register id [cofx/inject-db fx/do-fx interceptors (db-handler->interceptor handler)])))\n\n\n(defn reg-event-fx\n  \"Register the given event `handler` (function) for the given `id`. Optionally, provide\n  an `interceptors` chain.\n  `id` is typically a namespaced keyword  (but can be anything)\n  `handler` is a function: (coeffects-map event-vector) -> effects-map\n  `interceptors` is a collection of interceptors. Will be flattened and nils removed.\n  `handler` is wrapped in its own interceptor and added to the end of the interceptor\n   chain, so that, in the end, only a chain is registered.\n   Special effects and coeffects interceptors are added to the front of the\n   interceptor chain.  These interceptors inject the value of app-db into coeffects,\n   and, later, action effects.\"\n  ([id handler]\n   (reg-event-fx id nil handler))\n  ([id interceptors handler]\n   (events/register id [cofx/inject-db fx/do-fx interceptors (fx-handler->interceptor handler)])))\n\n\n(defn reg-event-ctx\n  \"Register the given event `handler` (function) for the given `id`. Optionally, provide\n  an `interceptors` chain.\n  `id` is typically a namespaced keyword  (but can be anything)\n  `handler` is a function: (context-map event-vector) -> context-map\n\n  This form of registration is almost never used. \"\n  ([id handler]\n   (reg-event-ctx id nil handler))\n  ([id interceptors handler]\n   (events/register id [cofx/inject-db fx/do-fx interceptors (ctx-handler->interceptor handler)])))\n\n(def clear-event (partial registrar/clear-handlers events/kind)) ;; think unreg-event-*\n\n;; -- interceptors ------------------------------------------------------------\n\n;; Standard interceptors.\n;; Detailed docs on each in std-interceptors.cljs\n(def debug       std-interceptors/debug)\n(def path        std-interceptors/path)\n(def enrich      std-interceptors/enrich)\n(def trim-v      std-interceptors/trim-v)\n(def after       std-interceptors/after)\n(def on-changes  std-interceptors/on-changes)\n\n\n;; Utility functions for creating your own interceptors\n;;\n;;  (def my-interceptor\n;;     (->interceptor                ;; used to create an interceptor\n;;       :id     :my-interceptor     ;; an id - decorative only\n;;       :before (fn [context]                         ;; you normally want to change :coeffects\n;;                  ... use get-coeffect  and assoc-coeffect\n;;                       )\n;;       :after  (fn [context]                         ;; you normally want to change :effects\n;;                 (let [db (get-effect context :db)]  ;; (get-in context [:effects :db])\n;;                   (assoc-effect context :http-ajax {...}])))))\n;;\n(def ->interceptor   interceptor/->interceptor)\n(def get-coeffect    interceptor/get-coeffect)\n(def assoc-coeffect  interceptor/assoc-coeffect)\n(def get-effect      interceptor/get-effect)\n(def assoc-effect    interceptor/assoc-effect)\n(def enqueue         interceptor/enqueue)\n\n\n;; --  logging ----------------------------------------------------------------\n;; Internally, re-frame uses the logging functions: warn, log, error, group and groupEnd\n;; By default, these functions map directly to the js/console implementations,\n;; but you can override with your own fns (set or subset).\n;; Example Usage:\n;;   (defn my-fn [& args]  (post-it-somewhere (apply str args)))  ;; here is my alternative\n;;   (re-frame.core/set-loggers!  {:warn my-fn :log my-fn})       ;; override the defaults with mine\n(def set-loggers! loggers/set-loggers!)\n\n;; If you are writing an extension to re-frame, like perhaps\n;; an effects handler, you may want to use re-frame logging.\n;;\n;; usage: (console :error \"Oh, dear God, it happened: \" a-var \" and \" another)\n;;        (console :warn \"Possible breach of containment wall at: \" dt)\n(def console loggers/console)\n\n\n;; -- unit testing ------------------------------------------------------------\n\n(defn make-restore-fn\n  \"Checkpoints the state of re-frame and returns a function which, when\n  later called, will restore re-frame to that checkpointed state.\n\n  Checkpoint includes app-db, all registered handlers and all subscriptions.\n  \"\n  []\n  (let [handlers @registrar/kind->id->handler\n        app-db   @db/app-db\n\t\t\t\tsubs-cache @subs/query->reaction]\n    (fn []\n\t\t\t;; call `dispose!` on all current subscriptions which\n\t\t\t;; didn't originally exist.\n      (let [original-subs (set (vals subs-cache))\n            current-subs  (set (vals @subs/query->reaction))]\n        (doseq [sub (set/difference current-subs original-subs)]\n          (interop/dispose! sub)))\n\n      ;; Reset the atoms\n      ;; We don't need to reset subs/query->reaction, as\n      ;; disposing of the subs removes them from the cache anyway\n      (reset! registrar/kind->id->handler handlers)\n      (reset! db/app-db app-db)\n      nil)))\n\n(defn purge-event-queue\n  \"Remove all events queued for processing\"\n  []\n  (router/purge router/event-queue))\n\n;; -- Event Processing Callbacks  ---------------------------------------------\n\n(defn add-post-event-callback\n  \"Registers a function `f` to be called after each event is processed\n   `f` will be called with two arguments:\n    - `event`: a vector. The event just processed.\n    - `queue`: a PersistentQueue, possibly empty, of events yet to be processed.\n\n   This is useful in advanced cases like:\n     - you are implementing a complex bootstrap pipeline\n     - you want to create your own handling infrastructure, with perhaps multiple\n       handlers for the one event, etc.  Hook in here.\n     - libraries providing 'isomorphic javascript' rendering on  Nodejs or Nashorn.\n\n  'id' is typically a keyword. Supplied at \\\"add time\\\" so it can subsequently\n  be used at \\\"remove time\\\" to get rid of the right callback.\n  \"\n  ([f]\n   (add-post-event-callback f f))   ;; use f as its own identifier\n  ([id f]\n   (router/add-post-event-callback router/event-queue id f)))\n\n\n(defn remove-post-event-callback\n  [id]\n  (router/remove-post-event-callback router/event-queue id))\n\n\n;; --  Deprecation ------------------------------------------------------------\n;; Assisting the v0.7.x ->  v0.8.x transition.\n(defn register-handler\n  [& args]\n  (console :warn  \"re-frame:  \\\"register-handler\\\" has been renamed \\\"reg-event-db\\\" (look for registration of\" (str (first args)) \")\")\n  (apply reg-event-db args))\n\n(defn register-sub\n  [& args]\n  (console :warn  \"re-frame:  \\\"register-sub\\\" is deprecated. Use \\\"reg-sub-raw\\\" (look for registration of\" (str (first args)) \")\")\n  (apply reg-sub-raw args))\n","~:reader-features",["^J",["~:cljs"]],"~:cljc",true,"~:source-map-compact",["^ ","mappings","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","names",["day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.core/dispatch","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.router/dispatch","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.core/dispatch-sync","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.router/dispatch-sync","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.core/reg-sub","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.subs/reg-sub","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.core/subscribe","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.subs/subscribe","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.core/clear-sub","cljs.core.partial","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.registrar/clear-handlers","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.subs/kind","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.core/clear-subscription-cache!","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.subs/clear-subscription-cache!","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.core/reg-sub-raw","query-id","handler-fn","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.registrar/register-handler","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.core/reg-fx","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.fx/reg-fx","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.core/clear-fx","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.fx/kind","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.core/reg-cofx","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.cofx/reg-cofx","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.core/inject-cofx","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.cofx/inject-cofx","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.core/clear-cofx","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.cofx/kind","var_args","G__61319","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.core/reg-event-db","js/Error","id","handler","day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.reg_event_db","interceptors","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.events/register","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.cofx/inject-db","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.fx/do-fx","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.std-interceptors/db-handler->interceptor","G__61329","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.core/reg-event-fx","day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.reg_event_fx","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.std-interceptors/fx-handler->interceptor","G__61347","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.core/reg-event-ctx","day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.reg_event_ctx","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.std-interceptors/ctx-handler->interceptor","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.core/clear-event","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.events/kind","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.core/debug","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.std-interceptors/debug","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.core/path","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.std-interceptors/path","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.core/enrich","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.std-interceptors/enrich","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.core/trim-v","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.std-interceptors/trim-v","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.core/after","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.std-interceptors/after","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.core/on-changes","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.std-interceptors/on-changes","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.core/->interceptor","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.interceptor/->interceptor","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.core/get-coeffect","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.interceptor/get-coeffect","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.core/assoc-coeffect","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.interceptor/assoc-coeffect","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.core/get-effect","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.interceptor/get-effect","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.core/assoc-effect","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.interceptor/assoc-effect","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.core/enqueue","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.interceptor/enqueue","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.core/set-loggers!","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.loggers/set-loggers!","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.core/console","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.loggers/console","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.core/make-restore-fn","cljs.core/deref","handlers","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.registrar/kind->id->handler","app-db","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.db/app-db","subs-cache","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.subs/query->reaction","original-subs","cljs.core/set","cljs.core/vals","current-subs","seq__61356","cljs.core/seq","chunk__61357","count__61358","i__61359","temp__5735__auto__","cljs.core/chunked-seq?","c__4556__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","cljs.core/count","cljs.core/first","cljs.core/next","sub","clojure.set.difference","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.interop/dispose!","cljs.core/reset!","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.core/purge-event-queue","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.router/event-queue","G__61361","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.core/add-post-event-callback","f","day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.core.add_post_event_callback","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.core/remove-post-event-callback","args__4742__auto__","len__4736__auto__","i__4737__auto__","argseq__4743__auto__","cljs.core/IndexedSeq","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.core/register-handler","seq61362","self__4724__auto__","args","G__61363","G__61364","G__61365","G__61366","cljs.core.apply","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.core/register-sub","seq61367","G__61368","G__61369","G__61370","G__61371"]],"~:used-vars",["^J",["~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.interceptor/assoc-effect","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.events/kind","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.interceptor/get-coeffect","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.cofx/inject-db","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.loggers/set-loggers!","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.core/clear-subscription-cache!","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.router/event-queue","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.std-interceptors/trim-v","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.interceptor/enqueue","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.core/dispatch-sync","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.core/reg-event-db","~$cljs.core/partial","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.router/remove-post-event-callback","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.fx/kind","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.core/debug","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.core/enqueue","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.core/assoc-effect","~$cljs.core/count","~$cljs.core/seq","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.subs/kind","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.core/get-coeffect","~$cljs.core/apply","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.core/assoc-coeffect","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.core/reg-fx","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.core/register-sub","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.core/add-post-event-callback","~$cljs.core/chunk-rest","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.core/trim-v","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.interceptor/assoc-coeffect","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.cofx/kind","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.core/reg-event-fx","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.core/remove-post-event-callback","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.db/app-db","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.core/clear-sub","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.interop/dispose!","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.subs/reg-sub","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.std-interceptors/after","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.core/dispatch","~$cljs.core/reset!","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.std-interceptors/fx-handler->interceptor","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.events/register","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.std-interceptors/debug","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.router/dispatch-sync","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.fx/do-fx","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.core/reg-sub","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.core/make-restore-fn","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.loggers/console","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.core/enrich","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.std-interceptors/db-handler->interceptor","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.core/register-handler","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.std-interceptors/path","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.registrar/register-handler","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.cofx/reg-cofx","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.core/console","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.registrar/kind->id->handler","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.core/reg-cofx","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.std-interceptors/on-changes","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.subs/clear-subscription-cache!","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.core/purge-event-queue","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.core/after","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.core/subscribe","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.std-interceptors/enrich","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.registrar/clear-handlers","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.core/reg-sub-raw","~$cljs.core/next","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.core/get-effect","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.core/reg-event-ctx","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.core/clear-cofx","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.subs/subscribe","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.core/path","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.core/clear-fx","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.fx/reg-fx","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.std-interceptors/ctx-handler->interceptor","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.router/dispatch","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.core/clear-event","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.interceptor/get-effect","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.router/purge","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.interceptor/->interceptor","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.core/set-loggers!","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.core/on-changes","~$js/Error","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.core/inject-cofx","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.core/->interceptor","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.router/add-post-event-callback","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.cofx/inject-cofx","~$cljs.core/chunked-seq?"]]],"~:cache-keys",["~#cmap",[["~:shadow.build.npm/resource","node_modules/react-dom/index.js"],["42468ad1f4c2050927ea1a8e0a075a1c29678378","525c8090e97debf6f2df78b32387b547a28b5beb","dc3011a0ee823c91a565237d17cbc3c0856de8a6","~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^J",[]],"~:deps-syms",["~$shadow.js","~$module$node_modules$react_dom$cjs$react_dom_production_min","~$module$node_modules$react_dom$cjs$react_dom_development"]]],["^1O","goog/dom/tagname.js"],["6025affb7181cd40418600864f58eed1ea80055d","^40",["^ ","^41",null,"^42",["^J",[]],"^43",["^14","~$goog.dom.HtmlElement"]]],["^1O","day8/re_frame_10x/inlined_deps/reagent/v0v10v0/reagent/ratom.cljs"],["b4130a91660ba19f2a9934384b29294a566bfd5d","^40",["^ ","^41",null,"^42",["^J",[]],"^43",["^14","^12","~$day8.re-frame-10x.inlined-deps.reagent.v0v10v0.reagent.impl.util","~$day8.re-frame-10x.inlined-deps.reagent.v0v10v0.reagent.debug","~$day8.re-frame-10x.inlined-deps.reagent.v0v10v0.reagent.impl.batching","^U","~$goog.object"]]],["^1O","goog/labs/useragent/platform.js"],["6025affb7181cd40418600864f58eed1ea80055d","^40",["^ ","^41",null,"^42",["^J",[]],"^43",["^14","~$goog.labs.userAgent.util","~$goog.string"]]],["^1O","goog/math/math.js"],["6025affb7181cd40418600864f58eed1ea80055d","^40",["^ ","^41",null,"^42",["^J",[]],"^43",["^14","~$goog.array","~$goog.asserts"]]],["^1O","goog/html/trustedtypes.js"],["6025affb7181cd40418600864f58eed1ea80055d","^40",["^ ","^41",null,"^42",["^J",[]],"^43",["^14"]]],["^1O","goog/labs/useragent/browser.js"],["6025affb7181cd40418600864f58eed1ea80055d","^40",["^ ","^41",null,"^42",["^J",[]],"^43",["^14","^4>","^4<","^4;","~$goog.string.internal"]]],["^1O","goog/html/safeurl.js"],["6025affb7181cd40418600864f58eed1ea80055d","^40",["^ ","^41",null,"^42",["^J",[]],"^43",["^14","^4?","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.i18n.bidi.Dir","~$goog.i18n.bidi.DirectionalString","~$goog.string.Const","~$goog.string.TypedString","^4@"]]],["^1O","goog/array/array.js"],["6025affb7181cd40418600864f58eed1ea80055d","^40",["^ ","^41",null,"^42",["^J",[]],"^43",["^14","^4?"]]],["^3[","node_modules/prop-types/checkPropTypes.js"],["42468ad1f4c2050927ea1a8e0a075a1c29678378","525c8090e97debf6f2df78b32387b547a28b5beb","3180f5f58c360a2e36c5ff354213b3ff22f43d1b","^40",["^ ","^41",null,"^42",["^J",[]],"^43",["^44","~$module$node_modules$prop_types$lib$ReactPropTypesSecret"]]],["^1O","goog/useragent/useragent.js"],["6025affb7181cd40418600864f58eed1ea80055d","^40",["^ ","^41",null,"^42",["^J",[]],"^43",["^14","~$goog.labs.userAgent.browser","~$goog.labs.userAgent.engine","~$goog.labs.userAgent.platform","^4<","~$goog.reflect","^4="]]],["^1O","goog/debug/error.js"],["6025affb7181cd40418600864f58eed1ea80055d","^40",["^ ","^41",null,"^42",["^J",[]],"^43",["^14"]]],["^1O","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/cofx.cljc"],["b4130a91660ba19f2a9934384b29294a566bfd5d","^40",["^ ","^41",null,"^42",["^J",[]],"^43",["^14","^12","^17","^11","^Z","^10"]]],["^1O","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/events.cljc"],["b4130a91660ba19f2a9934384b29294a566bfd5d","^40",["^ ","^41",null,"^42",["^J",[]],"^43",["^14","^12","^17","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.utils","^1:","^Z","^10","^11","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.trace"]]],["^1O","goog/dom/nodetype.js"],["6025affb7181cd40418600864f58eed1ea80055d","^40",["^ ","^41",null,"^42",["^J",[]],"^43",["^14"]]],["^1O","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/std_interceptors.cljc"],["b4130a91660ba19f2a9934384b29294a566bfd5d","^40",["^ ","^41",null,"^42",["^J",[]],"^43",["^14","^12","^11","^10","^Z","^17","~$clojure.data","^V","^4L","^4M"]]],["^1O","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/fx.cljc"],["b4130a91660ba19f2a9934384b29294a566bfd5d","^40",["^ ","^41",null,"^42",["^J",[]],"^43",["^14","^12","^Q","^17","^11","^1:","^1<","^Z","^10","^4M"]]],["^3[","node_modules/scheduler/cjs/scheduler.development.js"],["42468ad1f4c2050927ea1a8e0a075a1c29678378","525c8090e97debf6f2df78b32387b547a28b5beb","7d8513ea2b82a7b8f00a1fd322704005205046bc","^40",["^ ","^41",null,"^42",["^J",[]],"^43",["^44"]]],["^3[","node_modules/scheduler/cjs/scheduler.production.min.js"],["42468ad1f4c2050927ea1a8e0a075a1c29678378","525c8090e97debf6f2df78b32387b547a28b5beb","19e07f39891e78ec50904d00e33146e92404379f","^40",["^ ","^41",null,"^42",["^J",[]],"^43",["^44"]]],["^1O","goog/string/typedstring.js"],["6025affb7181cd40418600864f58eed1ea80055d","^40",["^ ","^41",null,"^42",["^J",[]],"^43",["^14"]]],["^3[","node_modules/scheduler/cjs/scheduler-tracing.production.min.js"],["42468ad1f4c2050927ea1a8e0a075a1c29678378","525c8090e97debf6f2df78b32387b547a28b5beb","d9f1d6c2a711a6903adf603db43d9f9e19057146","^40",["^ ","^41",null,"^42",["^J",[]],"^43",["^44"]]],["^3[","node_modules/react/index.js"],["42468ad1f4c2050927ea1a8e0a075a1c29678378","525c8090e97debf6f2df78b32387b547a28b5beb","a69a7f3d4a4636bf9035bc53c05b2d99a7b8af7f","^40",["^ ","^41",null,"^42",["^J",[]],"^43",["^44","~$module$node_modules$react$cjs$react_production_min","~$module$node_modules$react$cjs$react_development"]]],["^1O","shadow/js.js"],["40f4f317192e78c7a5d3348c55c94525b62f012f","^40",["^ ","^41",null,"^42",["^J",[]],"^43",["^14"]]],["^1O","goog/object/object.js"],["6025affb7181cd40418600864f58eed1ea80055d","^40",["^ ","^41",null,"^42",["^J",[]],"^43",["^14"]]],["^1O","goog/dom/asserts.js"],["6025affb7181cd40418600864f58eed1ea80055d","^40",["^ ","^41",null,"^42",["^J",[]],"^43",["^14","^4?"]]],["^3[","node_modules/react-dom/cjs/react-dom.production.min.js"],["42468ad1f4c2050927ea1a8e0a075a1c29678378","525c8090e97debf6f2df78b32387b547a28b5beb","d5ed1c931c99ccc1a772592a9e96c018d814f7fd","^40",["^ ","^41",null,"^42",["^J",[]],"^43",["^44","^?","~$module$node_modules$object_assign$index","~$module$node_modules$scheduler$index"]]],"~:SHADOW-TIMESTAMP",[1596134675000,1596134675000,1594142852000],["^3[","node_modules/react/cjs/react.development.js"],["42468ad1f4c2050927ea1a8e0a075a1c29678378","525c8090e97debf6f2df78b32387b547a28b5beb","0c9d0acaa1ab1e24333c71607d0fa0609193e7d7","^40",["^ ","^41",null,"^42",["^J",[]],"^43",["^44","^4Q","~$module$node_modules$prop_types$checkPropTypes"]]],["^1O","goog/math/long.js"],["6025affb7181cd40418600864f58eed1ea80055d","^40",["^ ","^41",null,"^42",["^J",[]],"^43",["^14","^4?","^4K"]]],["^1O","day8/re_frame_10x/inlined_deps/reagent/v0v10v0/reagent/impl/util.cljs"],["b4130a91660ba19f2a9934384b29294a566bfd5d","^40",["^ ","^41",null,"^42",["^J",[]],"^43",["^14","^12","~$clojure.string"]]],["^1O","goog/html/trustedresourceurl.js"],["6025affb7181cd40418600864f58eed1ea80055d","^40",["^ ","^41",null,"^42",["^J",[]],"^43",["^14","^4?","~$goog.html.trustedtypes","^4C","^4D","^4E","^4F"]]],["^1O","day8/re_frame_10x/inlined_deps/reagent/v0v10v0/reagent/core.cljs"],["b4130a91660ba19f2a9934384b29294a566bfd5d","^40",["^ ","^41",null,"^42",["^J",[]],"^43",["^14","^12","^?","~$day8.re-frame-10x.inlined-deps.reagent.v0v10v0.reagent.impl.template","~$day8.re-frame-10x.inlined-deps.reagent.v0v10v0.reagent.impl.component","^48","^4:","~$day8.re-frame-10x.inlined-deps.reagent.v0v10v0.reagent.ratom","^49","~$day8.re-frame-10x.inlined-deps.reagent.v0v10v0.reagent.dom"]]],["^1O","goog/string/internal.js"],["6025affb7181cd40418600864f58eed1ea80055d","^40",["^ ","^41",null,"^42",["^J",[]],"^43",["^14"]]],["^3[","node_modules/scheduler/cjs/scheduler-tracing.development.js"],["42468ad1f4c2050927ea1a8e0a075a1c29678378","525c8090e97debf6f2df78b32387b547a28b5beb","0b00a799c88b303e4c3e8fe2628f7bde50128f0d","^40",["^ ","^41",null,"^42",["^J",[]],"^43",["^44"]]],["^1O","goog/functions/functions.js"],["6025affb7181cd40418600864f58eed1ea80055d","^40",["^ ","^41",null,"^42",["^J",[]],"^43",["^14"]]],["^1O","goog/html/safestyle.js"],["6025affb7181cd40418600864f58eed1ea80055d","^40",["^ ","^41",null,"^42",["^J",[]],"^43",["^14","^4>","^4?","~$goog.html.SafeUrl","^4E","^4F","^4@"]]],["^1O","goog/dom/safe.js"],["6025affb7181cd40418600864f58eed1ea80055d","^40",["^ ","^41",null,"^42",["^J",[]],"^43",["^14","^4?","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","~$goog.html.SafeScript","~$goog.html.SafeStyle","^4[","^4B","~$goog.html.uncheckedconversions","^4E","^4@"]]],["^1O","clojure/walk.cljs"],["9f9729dbbf9b814c83dc189977b447d2ae92b6cd","^40",["^ ","^41",null,"^42",["^J",[]],"^43",["^14","^12"]]],["^1O","goog/structs/map.js"],["6025affb7181cd40418600864f58eed1ea80055d","^40",["^ ","^41",null,"^42",["^J",[]],"^43",["^14","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^1O","goog/html/safehtml.js"],["6025affb7181cd40418600864f58eed1ea80055d","^40",["^ ","^41",null,"^42",["^J",[]],"^43",["^14","^4>","^4?","~$goog.dom.TagName","~$goog.dom.tags","^53","^54","~$goog.html.SafeStyleSheet","^4[","^4B","^4V","^4C","^4D","^4H","^4;","^4E","^4F","^4@"]]],["^1O","goog/dom/tags.js"],["6025affb7181cd40418600864f58eed1ea80055d","^40",["^ ","^41",null,"^42",["^J",[]],"^43",["^14","^4;"]]],["^1O","goog/math/size.js"],["6025affb7181cd40418600864f58eed1ea80055d","^40",["^ ","^41",null,"^42",["^J",[]],"^43",["^14"]]],["^1O","day8/re_frame_10x/inlined_deps/reagent/v0v10v0/reagent/impl/batching.cljs"],["b4130a91660ba19f2a9934384b29294a566bfd5d","^40",["^ ","^41",null,"^42",["^J",[]],"^43",["^14","^12","^49","^48"]]],["^3[","node_modules/scheduler/index.js"],["42468ad1f4c2050927ea1a8e0a075a1c29678378","525c8090e97debf6f2df78b32387b547a28b5beb","408126fc2241739168bcaf5965ae56a7df143144","^40",["^ ","^41",null,"^42",["^J",[]],"^43",["^44","~$module$node_modules$scheduler$cjs$scheduler_production_min","~$module$node_modules$scheduler$cjs$scheduler_development"]]],["^1O","goog/labs/useragent/engine.js"],["6025affb7181cd40418600864f58eed1ea80055d","^40",["^ ","^41",null,"^42",["^J",[]],"^43",["^14","^4>","^4<","^4="]]],["^1O","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/subs.cljc"],["b4130a91660ba19f2a9934384b29294a566bfd5d","^40",["^ ","^41",null,"^42",["^J",[]],"^43",["^14","^12","^17","^1:","^10","^4L","^Z","^4M"]]],["^1O","goog/dom/dom.js"],["6025affb7181cd40418600864f58eed1ea80055d","^40",["^ ","^41",null,"^42",["^J",[]],"^43",["^14","^4>","^4?","~$goog.dom.BrowserFeature","~$goog.dom.NodeType","^58","~$goog.dom.safe","^52","^55","~$goog.math.Coordinate","~$goog.math.Size","^4;","^4=","~$goog.string.Unicode","~$goog.userAgent"]]],["^1O","goog/asserts/asserts.js"],["6025affb7181cd40418600864f58eed1ea80055d","^40",["^ ","^41",null,"^42",["^J",[]],"^43",["^14","~$goog.debug.Error","^5>"]]],["^1O","goog/uri/uri.js"],["6025affb7181cd40418600864f58eed1ea80055d","^40",["^ ","^41",null,"^42",["^J",[]],"^43",["^14","^4>","^4?","^4=","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1O","day8/re_frame_10x/inlined_deps/reagent/v0v10v0/reagent/dom.cljs"],["b4130a91660ba19f2a9934384b29294a566bfd5d","^40",["^ ","^41",null,"^42",["^J",[]],"^43",["^14","^12","^A","^48","^4W","^4:","^4Y"]]],["^1O","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/interop.cljs"],["b4130a91660ba19f2a9934384b29294a566bfd5d","^40",["^ ","^41",null,"^42",["^J",[]],"^43",["^14","^12","~$goog.async.nextTick","~$day8.re-frame-10x.inlined-deps.reagent.v0v10v0.reagent.core","^4Y"]]],["^1O","goog/i18n/bidi.js"],["6025affb7181cd40418600864f58eed1ea80055d","^40",["^ ","^41",null,"^42",["^J",[]],"^43",["^14"]]],["^3[","node_modules/object-assign/index.js"],["42468ad1f4c2050927ea1a8e0a075a1c29678378","525c8090e97debf6f2df78b32387b547a28b5beb","519ffd5a4c91b67302cc9947b794966d629860cd","^40",["^ ","^41",null,"^42",["^J",[]],"^43",["^44"]]],["^1O","goog/fs/url.js"],["6025affb7181cd40418600864f58eed1ea80055d","^40",["^ ","^41",null,"^42",["^J",[]],"^43",["^14"]]],["^1O","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/trace.cljc"],["b4130a91660ba19f2a9934384b29294a566bfd5d","^40",["^ ","^41",null,"^42",["^J",[]],"^43",["^14","^12","^1:","^10","^51"]]],["^1O","goog/base.js"],["6025affb7181cd40418600864f58eed1ea80055d","^40",["^ ","^41",null,"^42",["^J",[]],"^43",[]]],["^1O","goog/structs/structs.js"],["6025affb7181cd40418600864f58eed1ea80055d","^40",["^ ","^41",null,"^42",["^J",[]],"^43",["^14","^4>","^4;"]]],["^1O","clojure/string.cljs"],["9f9729dbbf9b814c83dc189977b447d2ae92b6cd","^40",["^ ","^41",null,"^42",["^J",[]],"^43",["^14","^12","^4=","~$goog.string.StringBuffer"]]],["^3[","node_modules/react/cjs/react.production.min.js"],["42468ad1f4c2050927ea1a8e0a075a1c29678378","525c8090e97debf6f2df78b32387b547a28b5beb","a25ef7d1b1992294ca65e96d70e1be7f70977b13","^40",["^ ","^41",null,"^42",["^J",[]],"^43",["^44","^4Q"]]],["^1O","goog/debug/entrypointregistry.js"],["6025affb7181cd40418600864f58eed1ea80055d","^40",["^ ","^41",null,"^42",["^J",[]],"^43",["^14","^4?"]]],["^1O","goog/string/string.js"],["6025affb7181cd40418600864f58eed1ea80055d","^40",["^ ","^41",null,"^42",["^J",[]],"^43",["^14","^5?","^55","^4E","^4@"]]],["^1O","clojure/data.cljs"],["9f9729dbbf9b814c83dc189977b447d2ae92b6cd","^40",["^ ","^41",null,"^42",["^J",[]],"^43",["^14","^12","^U"]]],["^1O","goog/reflect/reflect.js"],["6025affb7181cd40418600864f58eed1ea80055d","^40",["^ ","^41",null,"^42",["^J",[]],"^43",["^14"]]],["^1O","goog/labs/useragent/util.js"],["6025affb7181cd40418600864f58eed1ea80055d","^40",["^ ","^41",null,"^42",["^J",[]],"^43",["^14","^4@"]]],["^1O","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc"],["b4130a91660ba19f2a9934384b29294a566bfd5d","^40",["^ ","^41",null,"^42",["^J",[]],"^43",["^14","^12","^1<","^S","^1:","^17","^Y","^V","^Q","^10","^Z","^11","^19","^U"]]],["^1O","goog/string/stringbuffer.js"],["6025affb7181cd40418600864f58eed1ea80055d","^40",["^ ","^41",null,"^42",["^J",[]],"^43",["^14"]]],["^1O","goog/math/coordinate.js"],["6025affb7181cd40418600864f58eed1ea80055d","^40",["^ ","^41",null,"^42",["^J",[]],"^43",["^14","~$goog.math"]]],["^1O","day8/re_frame_10x/inlined_deps/reagent/v0v10v0/reagent/impl/template.cljs"],["b4130a91660ba19f2a9934384b29294a566bfd5d","^40",["^ ","^41",null,"^42",["^J",[]],"^43",["^14","^12","^?","^4U","~$clojure.walk","^48","^4X","^4:","^4Y","^49","^4;"]]],["^1O","goog/iter/iter.js"],["6025affb7181cd40418600864f58eed1ea80055d","^40",["^ ","^41",null,"^42",["^J",[]],"^43",["^14","^4>","^4?","^51","^5M"]]],["^1O","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/db.cljc"],["b4130a91660ba19f2a9934384b29294a566bfd5d","^40",["^ ","^41",null,"^42",["^J",[]],"^43",["^14","^12","^1:"]]],["^1O","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/loggers.cljc"],["b4130a91660ba19f2a9934384b29294a566bfd5d","^40",["^ ","^41",null,"^42",["^J",[]],"^43",["^14","^12","^U"]]],["^1O","goog/async/nexttick.js"],["6025affb7181cd40418600864f58eed1ea80055d","^40",["^ ","^41",null,"^42",["^J",[]],"^43",["^14","~$goog.debug.entryPointRegistry","~$goog.dom","^58","^5?","^51","^52","^4B","^4H","^4I","^4E"]]],["^1O","goog/html/uncheckedconversions.js"],["6025affb7181cd40418600864f58eed1ea80055d","^40",["^ ","^41",null,"^42",["^J",[]],"^43",["^14","^4?","^52","^53","^54","^5:","^4[","^4B","^4E","^4@"]]],["^1O","day8/re_frame_10x/inlined_deps/reagent/v0v10v0/reagent/debug.cljs"],["b4130a91660ba19f2a9934384b29294a566bfd5d","^40",["^ ","^41",null,"^42",["^J",[]],"^43",["^14","^12"]]],["^3[","node_modules/prop-types/lib/ReactPropTypesSecret.js"],["42468ad1f4c2050927ea1a8e0a075a1c29678378","525c8090e97debf6f2df78b32387b547a28b5beb","4eec230c5b56ef580ea9c3e7ae6358ba1f8bdbec","^40",["^ ","^41",null,"^42",["^J",[]],"^43",["^44"]]],["^1O","goog/dom/htmlelement.js"],["6025affb7181cd40418600864f58eed1ea80055d","^40",["^ ","^41",null,"^42",["^J",[]],"^43",["^14"]]],["^1O","cljs/core.cljs"],["9f9729dbbf9b814c83dc189977b447d2ae92b6cd","^40",["^ ","^41",null,"^42",["^J",[]],"^43",["^14","~$goog.math.Long","~$goog.math.Integer","^4=","^4;","^4>","~$goog.Uri","^5L"]]],["^1O","goog/html/safescript.js"],["6025affb7181cd40418600864f58eed1ea80055d","^40",["^ ","^41",null,"^42",["^J",[]],"^43",["^14","^4?","^4V","^4E","^4F"]]],["^1O","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/interceptor.cljc"],["b4130a91660ba19f2a9934384b29294a566bfd5d","^40",["^ ","^41",null,"^42",["^J",[]],"^43",["^14","^12","^10","^1:","^4M","^U"]]],["^1O","goog/html/safestylesheet.js"],["6025affb7181cd40418600864f58eed1ea80055d","^40",["^ ","^41",null,"^42",["^J",[]],"^43",["^14","^4>","^4?","^54","^4;","^4E","^4F","^4@"]]],["^1O","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/utils.cljc"],["b4130a91660ba19f2a9934384b29294a566bfd5d","^40",["^ ","^41",null,"^42",["^J",[]],"^43",["^14","^12","^10"]]],["^1O","goog/math/integer.js"],["6025affb7181cd40418600864f58eed1ea80055d","^40",["^ ","^41",null,"^42",["^J",[]],"^43",["^14","^4K"]]],["^1O","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/router.cljc"],["b4130a91660ba19f2a9934384b29294a566bfd5d","^40",["^ ","^41",null,"^42",["^J",[]],"^43",["^14","^12","^1<","^1:","^10","^4M"]]],["^1O","goog/dom/browserfeature.js"],["6025affb7181cd40418600864f58eed1ea80055d","^40",["^ ","^41",null,"^42",["^J",[]],"^43",["^14","^5C"]]],["^3[","node_modules/scheduler/tracing.js"],["42468ad1f4c2050927ea1a8e0a075a1c29678378","525c8090e97debf6f2df78b32387b547a28b5beb","4a7a89de5eaa5548bfc85da9e5243b3c7e444a34","^40",["^ ","^41",null,"^42",["^J",[]],"^43",["^44","~$module$node_modules$scheduler$cjs$scheduler_tracing_production_min","~$module$node_modules$scheduler$cjs$scheduler_tracing_development"]]],["^3[","node_modules/react-dom/cjs/react-dom.development.js"],["42468ad1f4c2050927ea1a8e0a075a1c29678378","525c8090e97debf6f2df78b32387b547a28b5beb","19dc160595b3eb8999f04fe10db88fd747daa853","^40",["^ ","^41",null,"^42",["^J",[]],"^43",["^44","^?","^4Q","^4R","^4T","~$module$node_modules$scheduler$tracing"]]],["^1O","clojure/set.cljs"],["9f9729dbbf9b814c83dc189977b447d2ae92b6cd","^40",["^ ","^41",null,"^42",["^J",[]],"^43",["^14","^12"]]],["^1O","goog/uri/utils.js"],["6025affb7181cd40418600864f58eed1ea80055d","^40",["^ ","^41",null,"^42",["^J",[]],"^43",["^14","^4>","^4?","^4="]]],["^1O","goog/string/const.js"],["6025affb7181cd40418600864f58eed1ea80055d","^40",["^ ","^41",null,"^42",["^J",[]],"^43",["^14","^4?","^4F"]]],["^1O","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/registrar.cljc"],["b4130a91660ba19f2a9934384b29294a566bfd5d","^40",["^ ","^41",null,"^42",["^J",[]],"^43",["^14","^12","^1:","^10"]]],["^1O","day8/re_frame_10x/inlined_deps/reagent/v0v10v0/reagent/impl/component.cljs"],["b4130a91660ba19f2a9934384b29294a566bfd5d","^40",["^ ","^41",null,"^42",["^J",[]],"^43",["^14","^12","^4;","^?","^48","^4:","^4Y","^49"]]]]],"~:clj-info",["^ ","jar:file:/C:/Users/BlackHammer09/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/source_map.clj",1594142852000,"jar:file:/C:/Users/BlackHammer09/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/js_deps.cljc",1594142852000,"jar:file:/C:/Users/BlackHammer09/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/analyzer.cljc",1594142852000,"jar:file:/C:/Users/BlackHammer09/.m2/repository/reagent/reagent/0.10.0/reagent-0.10.0.jar!/reagent/interop.clj",1594142858000,"jar:file:/C:/Users/BlackHammer09/.m2/repository/day8/re-frame/re-frame-10x/0.7.0/re-frame-10x-0.7.0.jar!/day8/re_frame_10x/inlined_deps/reagent/v0v10v0/reagent/core.clj",1596223609000,"jar:file:/C:/Users/BlackHammer09/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/edn.clj",1592834825000,"jar:file:/C:/Users/BlackHammer09/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/instant.clj",1592834825000,"jar:file:/C:/Users/BlackHammer09/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/externs.clj",1594142852000,"jar:file:/C:/Users/BlackHammer09/.m2/repository/day8/re-frame/re-frame-10x/0.7.0/re-frame-10x-0.7.0.jar!/day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/trace.cljc",1596223609000,"jar:file:/C:/Users/BlackHammer09/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/tagged_literals.cljc",1594142852000,"jar:file:/C:/Users/BlackHammer09/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/set.clj",1592834825000,"jar:file:/C:/Users/BlackHammer09/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/pprint.clj",1592834825000,"jar:file:/C:/Users/BlackHammer09/.m2/repository/day8/re-frame/re-frame-10x/0.7.0/re-frame-10x-0.7.0.jar!/day8/re_frame_10x/inlined_deps/reagent/v0v10v0/reagent/debug.clj",1596223609000,"jar:file:/C:/Users/BlackHammer09/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader.clj",1594142850000,"jar:file:/C:/Users/BlackHammer09/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/reader_types.clj",1594142850000,"jar:file:/C:/Users/BlackHammer09/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/string.clj",1592834825000,"jar:file:/C:/Users/BlackHammer09/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/default_data_readers.clj",1594142850000,"jar:file:/C:/Users/BlackHammer09/.m2/repository/org/clojure/data.json/0.2.6/data.json-0.2.6.jar!/clojure/data/json.clj",1594134806000,"jar:file:/C:/Users/BlackHammer09/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/util.cljc",1594142852000,"jar:file:/C:/Users/BlackHammer09/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/java/io.clj",1592834825000,"jar:file:/C:/Users/BlackHammer09/.m2/repository/net/cgrand/macrovich/0.2.1/macrovich-0.2.1.jar!/net/cgrand/macrovich.cljc",1594914762000,"jar:file:/C:/Users/BlackHammer09/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/core.cljc",1594142852000,"jar:file:/C:/Users/BlackHammer09/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/source_map/base64.clj",1594142852000,"jar:file:/C:/Users/BlackHammer09/.m2/repository/day8/re-frame/re-frame-10x/0.7.0/re-frame-10x-0.7.0.jar!/day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/interop.clj",1596223609000,"jar:file:/C:/Users/BlackHammer09/.m2/repository/day8/re-frame/re-frame-10x/0.7.0/re-frame-10x-0.7.0.jar!/day8/re_frame_10x/inlined_deps/reagent/v0v10v0/reagent/ratom.clj",1596223609000,"jar:file:/C:/Users/BlackHammer09/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/source_map/base64_vlq.clj",1594142852000,"jar:file:/C:/Users/BlackHammer09/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/compiler.cljc",1594142852000,"jar:file:/C:/Users/BlackHammer09/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/core.clj",1592834825000,"jar:file:/C:/Users/BlackHammer09/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/impl/inspect.clj",1594142850000,"jar:file:/C:/Users/BlackHammer09/.m2/repository/reagent/reagent/0.10.0/reagent-0.10.0.jar!/reagent/debug.clj",1594142858000,"jar:file:/C:/Users/BlackHammer09/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/env.cljc",1594142852000,"jar:file:/C:/Users/BlackHammer09/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/impl/errors.clj",1594142850000,"jar:file:/C:/Users/BlackHammer09/.m2/repository/binaryage/devtools/1.0.2/devtools-1.0.2.jar!/devtools/defaults.clj",1594142858000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","^7",1,"^8",5,"^9",1,"^:",66],"^;",["^ ","^<","^=","^>","^?","^@","^A","^B","^C","^D","^E","^F","^G"],"^H",null,"^I",["^J",[]],"^K","^L","^O",null,"^P",["^ ","^Q","^Q","^R","^S","^T","^U","^V","^V","^W","^V","^X","^Y","^S","^S","^Z","^Z","^[","^10","^Y","^Y","^11","^11","^12","^12","^13","^11","^10","^10","^14","^14","^15","^Q","^16","^17","^18","^Z","^19","^19","^1:","^1:","^U","^U","^1;","^1<","^17","^17","^1<","^1<","^1=","^1:","^1>","^19"],"^1?",["^J",["^1@"]],"~:shadow/js-access-global",["^J",["Error"]],"^1A",["^ ","^1B","^19","^1C","^19","^1D","^19"],"~:defs",["^ ","~$console",["^ ","^K","^38","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","^7",164,"^8",1,"^9",164,"^:",13,"^5",["^ ","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","^7",164,"^8",6,"^9",164,"^:",13]],"~$on-changes",["^ ","^K","^3R","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","^7",127,"^8",1,"^9",127,"^:",16,"^5",["^ ","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","^7",127,"^8",6,"^9",127,"^:",16]],"~$enrich",["^ ","^K","^32","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","^7",124,"^8",1,"^9",124,"^:",12,"^5",["^ ","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","^7",124,"^8",6,"^9",124,"^:",12]],"~$reg-sub-raw",["^ ","~:protocol-inline",null,"^5",["^ ","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","^7",51,"^8",7,"^9",51,"^:",18,"~:arglists",["^1G",["~$quote",["^1G",[["~$query-id","~$handler-fn"]]]]],"~:doc","This is a low level, advanced function.  You should probably be\n  using reg-sub instead.\n  Docs in https://github.com/day8/re-frame/blob/master/docs/SubscriptionFlow.md"],"^K","^3B","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","^:",18,"~:method-params",["^1G",[["^6W","^6X"]]],"~:protocol-impl",null,"~:arglists-meta",["^1G",[null,null]],"^8",1,"~:variadic?",false,"^7",51,"~:ret-tag","~$any","^9",51,"~:max-fixed-arity",2,"~:fn-var",true,"^6U",["^1G",["^6V",["^1G",[["^6W","^6X"]]]]],"^6Y","This is a low level, advanced function.  You should probably be\n  using reg-sub instead.\n  Docs in https://github.com/day8/re-frame/blob/master/docs/SubscriptionFlow.md"],"~$subscribe",["^ ","^K","^3?","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","^7",46,"^8",1,"^9",46,"^:",15,"^5",["^ ","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","^7",46,"^8",6,"^9",46,"^:",15]],"~$assoc-coeffect",["^ ","^K","^2E","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","^7",144,"^8",1,"^9",144,"^:",20,"^5",["^ ","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","^7",144,"^8",6,"^9",144,"^:",20]],"~$register-sub",["^ ","^6T",null,"^5",["^ ","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","^7",234,"^8",7,"^9",234,"^:",19,"^6U",["^1G",["^6V",["^1G",[["~$&","~$args"]]]]],"~:top-fn",["^ ","^71",true,"~:fixed-arity",0,"^74",0,"^6Z",[["^1G",["^79"]]],"^6U",["^1G",[["~$&","^79"]]],"^70",["^1G",[null]]]],"^K","^2G","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","^:",19,"^7:",["^ ","^71",true,"^7;",0,"^74",0,"^6Z",[["^1G",["^79"]]],"^6U",["^1G",[["~$&","^79"]]],"^70",["^1G",[null]]],"^6Z",[["^1G",["^79"]]],"^6[",null,"^7;",0,"^70",["^1G",[null]],"^8",1,"^71",true,"~:methods",[["^ ","^7;",0,"^71",true,"~:tag","^73"]],"^7",234,"^72","^73","^9",234,"^74",0,"^75",true,"^6U",["^1G",[["~$&","^79"]]]],"~$purge-event-queue",["^ ","^6T",null,"^5",["^ ","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","^7",194,"^8",7,"^9",194,"^:",24,"^6U",["^1G",["^6V",["^1G",[[]]]]],"^6Y","Remove all events queued for processing"],"^K","^3=","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","^:",24,"^6Z",["^1G",[[]]],"^6[",null,"^70",["^1G",[null,null]],"^8",1,"^71",false,"^7",194,"^72","^73","^9",194,"^74",0,"^75",true,"^6U",["^1G",["^6V",["^1G",[[]]]]],"^6Y","Remove all events queued for processing"],"~$remove-post-event-callback",["^ ","^6T",null,"^5",["^ ","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","^7",222,"^8",7,"^9",222,"^:",33,"^6U",["^1G",["^6V",["^1G",[["~$id"]]]]]],"^K","^2N","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","^:",33,"^6Z",["^1G",[["^7@"]]],"^6[",null,"^70",["^1G",[null,null]],"^8",1,"^71",false,"^7",222,"^72","^73","^9",222,"^74",1,"^75",true,"^6U",["^1G",["^6V",["^1G",[["^7@"]]]]]],"~$path",["^ ","^K","^3H","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","^7",123,"^8",1,"^9",123,"^:",10,"^5",["^ ","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","^7",123,"^8",6,"^9",123,"^:",10]],"~$reg-sub",["^ ","^K","^2[","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","^7",45,"^8",1,"^9",45,"^:",13,"^5",["^ ","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","^7",45,"^8",6,"^9",45,"^:",13]],"~$make-restore-fn",["^ ","^6T",null,"^5",["^ ","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","^7",169,"^8",7,"^9",169,"^:",22,"^6U",["^1G",["^6V",["^1G",[[]]]]],"^6Y","Checkpoints the state of re-frame and returns a function which, when\n  later called, will restore re-frame to that checkpointed state.\n\n  Checkpoint includes app-db, all registered handlers and all subscriptions.\n  "],"^K","^30","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","^:",22,"^6Z",["^1G",[[]]],"^6[",null,"^70",["^1G",[null,null]],"^8",1,"^71",false,"^7",169,"^72","~$function","^9",169,"^74",0,"^75",true,"^6U",["^1G",["^6V",["^1G",[[]]]]],"^6Y","Checkpoints the state of re-frame and returns a function which, when\n  later called, will restore re-frame to that checkpointed state.\n\n  Checkpoint includes app-db, all registered handlers and all subscriptions.\n  "],"~$clear-fx",["^ ","^K","^3I","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","^7",61,"^8",1,"^9",61,"^:",14,"^5",["^ ","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","^7",61,"^8",6,"^9",61,"^:",14],"^7=","^7D"],"~$get-effect",["^ ","^K","^3D","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","^7",145,"^8",1,"^9",145,"^:",16,"^5",["^ ","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","^7",145,"^8",6,"^9",145,"^:",16]],"~$reg-event-db",["^ ","^6T",null,"^5",["^ ","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","^7",71,"^8",7,"^9",71,"^:",19,"^6U",["^1G",["^6V",["^1G",[["^7@","~$handler"],["^7@","~$interceptors","^7H"]]]]],"^6Y","Register the given event `handler` (function) for the given `id`. Optionally, provide\n  an `interceptors` chain.\n  `id` is typically a namespaced keyword  (but can be anything)\n  `handler` is a function: (db event) -> db\n  `interceptors` is a collection of interceptors. Will be flattened and nils removed.\n  `handler` is wrapped in its own interceptor and added to the end of the interceptor\n   chain, so that, in the end, only a chain is registered.\n   Special effects and coeffects interceptors are added to the front of this\n   chain.","^7:",["^ ","^71",false,"^7;",3,"^74",3,"^6Z",[["^7@","^7H"],["^7@","^7I","^7H"]],"^6U",["^1G",[["^7@","^7H"],["^7@","^7I","^7H"]]],"^70",["^1G",[null,null]]]],"^K","^29","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","^:",19,"^7:",["^ ","^71",false,"^7;",3,"^74",3,"^6Z",[["^7@","^7H"],["^7@","^7I","^7H"]],"^6U",["^1G",[["^7@","^7H"],["^7@","^7I","^7H"]]],"^70",["^1G",[null,null]]],"^6Z",[["^7@","^7H"],["^7@","^7I","^7H"]],"^6[",null,"^7;",3,"^70",["^1G",[null,null]],"^8",1,"^71",false,"^7<",[["^ ","^7;",2,"^71",false,"^7=","^73"],["^ ","^7;",3,"^71",false,"^7=","^73"]],"^7",71,"^9",71,"^74",3,"^75",true,"^6U",["^1G",[["^7@","^7H"],["^7@","^7I","^7H"]]],"^6Y","Register the given event `handler` (function) for the given `id`. Optionally, provide\n  an `interceptors` chain.\n  `id` is typically a namespaced keyword  (but can be anything)\n  `handler` is a function: (db event) -> db\n  `interceptors` is a collection of interceptors. Will be flattened and nils removed.\n  `handler` is wrapped in its own interceptor and added to the end of the interceptor\n   chain, so that, in the end, only a chain is registered.\n   Special effects and coeffects interceptors are added to the front of this\n   chain."],"~$dispatch-sync",["^ ","^K","^28","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","^7",41,"^8",1,"^9",41,"^:",19,"^5",["^ ","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","^7",41,"^8",6,"^9",41,"^:",19]],"~$clear-event",["^ ","^K","^3M","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","^7",116,"^8",1,"^9",116,"^:",17,"^5",["^ ","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","^7",116,"^8",6,"^9",116,"^:",17],"^7=","^7D"],"~$->interceptor",["^ ","^K","^3U","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","^7",142,"^8",1,"^9",142,"^:",19,"^5",["^ ","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","^7",142,"^8",6,"^9",142,"^:",19]],"~$set-loggers!",["^ ","^K","^3Q","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","^7",157,"^8",1,"^9",157,"^:",18,"^5",["^ ","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","^7",157,"^8",6,"^9",157,"^:",18]],"~$inject-cofx",["^ ","^K","^3T","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","^7",65,"^8",1,"^9",65,"^:",17,"^5",["^ ","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","^7",65,"^8",6,"^9",65,"^:",17]],"~$get-coeffect",["^ ","^K","^2C","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","^7",143,"^8",1,"^9",143,"^:",18,"^5",["^ ","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","^7",143,"^8",6,"^9",143,"^:",18]],"~$debug",["^ ","^K","^2=","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","^7",122,"^8",1,"^9",122,"^:",11,"^5",["^ ","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","^7",122,"^8",6,"^9",122,"^:",11],"^7=","~$cljs.core/IMap"],"~$assoc-effect",["^ ","^K","^2?","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","^7",146,"^8",1,"^9",146,"^:",18,"^5",["^ ","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","^7",146,"^8",6,"^9",146,"^:",18]],"~$enqueue",["^ ","^K","^2>","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","^7",147,"^8",1,"^9",147,"^:",13,"^5",["^ ","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","^7",147,"^8",6,"^9",147,"^:",13]],"~$clear-cofx",["^ ","^K","^3F","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","^7",66,"^8",1,"^9",66,"^:",16,"^5",["^ ","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","^7",66,"^8",6,"^9",66,"^:",16],"^7=","^7D"],"~$reg-event-ctx",["^ ","^6T",null,"^5",["^ ","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","^7",104,"^8",7,"^9",104,"^:",20,"^6U",["^1G",["^6V",["^1G",[["^7@","^7H"],["^7@","^7I","^7H"]]]]],"^6Y","Register the given event `handler` (function) for the given `id`. Optionally, provide\n  an `interceptors` chain.\n  `id` is typically a namespaced keyword  (but can be anything)\n  `handler` is a function: (context-map event-vector) -> context-map\n\n  This form of registration is almost never used. ","^7:",["^ ","^71",false,"^7;",3,"^74",3,"^6Z",[["^7@","^7H"],["^7@","^7I","^7H"]],"^6U",["^1G",[["^7@","^7H"],["^7@","^7I","^7H"]]],"^70",["^1G",[null,null]]]],"^K","^3E","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","^:",20,"^7:",["^ ","^71",false,"^7;",3,"^74",3,"^6Z",[["^7@","^7H"],["^7@","^7I","^7H"]],"^6U",["^1G",[["^7@","^7H"],["^7@","^7I","^7H"]]],"^70",["^1G",[null,null]]],"^6Z",[["^7@","^7H"],["^7@","^7I","^7H"]],"^6[",null,"^7;",3,"^70",["^1G",[null,null]],"^8",1,"^71",false,"^7<",[["^ ","^7;",2,"^71",false,"^7=","^73"],["^ ","^7;",3,"^71",false,"^7=","^73"]],"^7",104,"^9",104,"^74",3,"^75",true,"^6U",["^1G",[["^7@","^7H"],["^7@","^7I","^7H"]]],"^6Y","Register the given event `handler` (function) for the given `id`. Optionally, provide\n  an `interceptors` chain.\n  `id` is typically a namespaced keyword  (but can be anything)\n  `handler` is a function: (context-map event-vector) -> context-map\n\n  This form of registration is almost never used. "],"~$reg-fx",["^ ","^K","^2F","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","^7",60,"^8",1,"^9",60,"^:",12,"^5",["^ ","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","^7",60,"^8",6,"^9",60,"^:",12]],"~$trim-v",["^ ","^K","^2J","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","^7",125,"^8",1,"^9",125,"^:",12,"^5",["^ ","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","^7",125,"^8",6,"^9",125,"^:",12],"^7=","^7Q"],"~$clear-sub",["^ ","^K","^2P","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","^7",48,"^8",1,"^9",48,"^:",15,"^5",["^ ","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","^7",48,"^8",6,"^9",48,"^:",15],"^7=","^7D"],"~$dispatch",["^ ","^K","^2T","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","^7",40,"^8",1,"^9",40,"^:",14,"^5",["^ ","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","^7",40,"^8",6,"^9",40,"^:",14]],"~$after",["^ ","^K","^3>","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","^7",126,"^8",1,"^9",126,"^:",11,"^5",["^ ","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","^7",126,"^8",6,"^9",126,"^:",11]],"~$add-post-event-callback",["^ ","^6T",null,"^5",["^ ","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","^7",201,"^8",7,"^9",201,"^:",30,"^6U",["^1G",["^6V",["^1G",[["~$f"],["^7@","~$f"]]]]],"^6Y","Registers a function `f` to be called after each event is processed\n   `f` will be called with two arguments:\n    - `event`: a vector. The event just processed.\n    - `queue`: a PersistentQueue, possibly empty, of events yet to be processed.\n\n   This is useful in advanced cases like:\n     - you are implementing a complex bootstrap pipeline\n     - you want to create your own handling infrastructure, with perhaps multiple\n       handlers for the one event, etc.  Hook in here.\n     - libraries providing 'isomorphic javascript' rendering on  Nodejs or Nashorn.\n\n  'id' is typically a keyword. Supplied at \"add time\" so it can subsequently\n  be used at \"remove time\" to get rid of the right callback.\n  ","^7:",["^ ","^71",false,"^7;",2,"^74",2,"^6Z",[["~$f"],["^7@","~$f"]],"^6U",["^1G",[["~$f"],["^7@","~$f"]]],"^70",["^1G",[null,null]]]],"^K","^2H","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","^:",30,"^7:",["^ ","^71",false,"^7;",2,"^74",2,"^6Z",[["~$f"],["^7@","~$f"]],"^6U",["^1G",[["~$f"],["^7@","~$f"]]],"^70",["^1G",[null,null]]],"^6Z",[["~$f"],["^7@","~$f"]],"^6[",null,"^7;",2,"^70",["^1G",[null,null]],"^8",1,"^71",false,"^7<",[["^ ","^7;",1,"^71",false,"^7=","^73"],["^ ","^7;",2,"^71",false,"^7=","^73"]],"^7",201,"^9",201,"^74",2,"^75",true,"^6U",["^1G",[["~$f"],["^7@","~$f"]]],"^6Y","Registers a function `f` to be called after each event is processed\n   `f` will be called with two arguments:\n    - `event`: a vector. The event just processed.\n    - `queue`: a PersistentQueue, possibly empty, of events yet to be processed.\n\n   This is useful in advanced cases like:\n     - you are implementing a complex bootstrap pipeline\n     - you want to create your own handling infrastructure, with perhaps multiple\n       handlers for the one event, etc.  Hook in here.\n     - libraries providing 'isomorphic javascript' rendering on  Nodejs or Nashorn.\n\n  'id' is typically a keyword. Supplied at \"add time\" so it can subsequently\n  be used at \"remove time\" to get rid of the right callback.\n  "],"~$reg-cofx",["^ ","^K","^3:","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","^7",64,"^8",1,"^9",64,"^:",14,"^5",["^ ","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","^7",64,"^8",6,"^9",64,"^:",14]],"~$reg-event-fx",["^ ","^6T",null,"^5",["^ ","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","^7",87,"^8",7,"^9",87,"^:",19,"^6U",["^1G",["^6V",["^1G",[["^7@","^7H"],["^7@","^7I","^7H"]]]]],"^6Y","Register the given event `handler` (function) for the given `id`. Optionally, provide\n  an `interceptors` chain.\n  `id` is typically a namespaced keyword  (but can be anything)\n  `handler` is a function: (coeffects-map event-vector) -> effects-map\n  `interceptors` is a collection of interceptors. Will be flattened and nils removed.\n  `handler` is wrapped in its own interceptor and added to the end of the interceptor\n   chain, so that, in the end, only a chain is registered.\n   Special effects and coeffects interceptors are added to the front of the\n   interceptor chain.  These interceptors inject the value of app-db into coeffects,\n   and, later, action effects.","^7:",["^ ","^71",false,"^7;",3,"^74",3,"^6Z",[["^7@","^7H"],["^7@","^7I","^7H"]],"^6U",["^1G",[["^7@","^7H"],["^7@","^7I","^7H"]]],"^70",["^1G",[null,null]]]],"^K","^2M","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","^:",19,"^7:",["^ ","^71",false,"^7;",3,"^74",3,"^6Z",[["^7@","^7H"],["^7@","^7I","^7H"]],"^6U",["^1G",[["^7@","^7H"],["^7@","^7I","^7H"]]],"^70",["^1G",[null,null]]],"^6Z",[["^7@","^7H"],["^7@","^7I","^7H"]],"^6[",null,"^7;",3,"^70",["^1G",[null,null]],"^8",1,"^71",false,"^7<",[["^ ","^7;",2,"^71",false,"^7=","^73"],["^ ","^7;",3,"^71",false,"^7=","^73"]],"^7",87,"^9",87,"^74",3,"^75",true,"^6U",["^1G",[["^7@","^7H"],["^7@","^7I","^7H"]]],"^6Y","Register the given event `handler` (function) for the given `id`. Optionally, provide\n  an `interceptors` chain.\n  `id` is typically a namespaced keyword  (but can be anything)\n  `handler` is a function: (coeffects-map event-vector) -> effects-map\n  `interceptors` is a collection of interceptors. Will be flattened and nils removed.\n  `handler` is wrapped in its own interceptor and added to the end of the interceptor\n   chain, so that, in the end, only a chain is registered.\n   Special effects and coeffects interceptors are added to the front of the\n   interceptor chain.  These interceptors inject the value of app-db into coeffects,\n   and, later, action effects."],"~$register-handler",["^ ","^6T",null,"^5",["^ ","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","^7",229,"^8",7,"^9",229,"^:",23,"^6U",["^1G",["^6V",["^1G",[["~$&","^79"]]]]],"^7:",["^ ","^71",true,"^7;",0,"^74",0,"^6Z",[["^1G",["^79"]]],"^6U",["^1G",[["~$&","^79"]]],"^70",["^1G",[null]]]],"^K","^34","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","^:",23,"^7:",["^ ","^71",true,"^7;",0,"^74",0,"^6Z",[["^1G",["^79"]]],"^6U",["^1G",[["~$&","^79"]]],"^70",["^1G",[null]]],"^6Z",[["^1G",["^79"]]],"^6[",null,"^7;",0,"^70",["^1G",[null]],"^8",1,"^71",true,"^7<",[["^ ","^7;",0,"^71",true,"^7=","^73"]],"^7",229,"^72","^73","^9",229,"^74",0,"^75",true,"^6U",["^1G",[["~$&","^79"]]]],"~$clear-subscription-cache!",["^ ","^K","^24","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","^7",49,"^8",1,"^9",49,"^:",31,"^5",["^ ","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/core.cljc","^7",49,"^8",6,"^9",49,"^:",31]]],"^1E",["^ ","^12","^12"],"~:cljs.analyzer/constants",["^ ","^1?",["^J",["~:warn"]],"~:order",["^85"]],"^1K",["^ ","^1@",["^J",[]]],"^1L",["^ "],"^1M",["^14","^12","^1<","^S","^1:","^17","^Y","^V","^Q","^10","^Z","^11","^19","^U"]],"^N","^L","~:ns-specs",["^ "],"~:ns-spec-vars",["^J",[]],"~:compiler-options",["^3Z",[["^89","~:static-fns"],true,["^89","~:shadow-tweaks"],null,["^89","~:source-map-inline"],null,["^89","~:elide-asserts"],false,["^89","~:optimize-constants"],null,["^89","^1R"],null,["^89","~:external-config"],null,["^89","~:tooling-config"],null,["^89","~:emit-constants"],null,["^89","~:load-tests"],null,["^89","~:form-size-threshold"],null,["^89","~:data-readers"],null,["^89","~:infer-externs"],"~:auto",["^89","^1T"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^89","~:fn-invoke-direct"],null,["^89","~:source-map"],"/dev/null"]]]