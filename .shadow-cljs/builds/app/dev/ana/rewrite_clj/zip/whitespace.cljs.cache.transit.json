["^ ","~:output",["^ ","~:js","goog.provide('rewrite_clj.zip.whitespace');\r\nrewrite_clj.zip.whitespace.whitespace_QMARK_ = (function rewrite_clj$zip$whitespace$whitespace_QMARK_(zloc){\r\nvar G__63098 = zloc;\r\nvar G__63098__$1 = (((G__63098 == null))?null:clojure.zip.node(G__63098));\r\nif((G__63098__$1 == null)){\r\nreturn null;\r\n} else {\r\nreturn (rewrite_clj.node.whitespace_QMARK_.cljs$core$IFn$_invoke$arity$1 ? rewrite_clj.node.whitespace_QMARK_.cljs$core$IFn$_invoke$arity$1(G__63098__$1) : rewrite_clj.node.whitespace_QMARK_.call(null,G__63098__$1));\r\n}\r\n});\r\nrewrite_clj.zip.whitespace.linebreak_QMARK_ = (function rewrite_clj$zip$whitespace$linebreak_QMARK_(zloc){\r\nvar G__63099 = zloc;\r\nvar G__63099__$1 = (((G__63099 == null))?null:clojure.zip.node(G__63099));\r\nif((G__63099__$1 == null)){\r\nreturn null;\r\n} else {\r\nreturn (rewrite_clj.node.linebreak_QMARK_.cljs$core$IFn$_invoke$arity$1 ? rewrite_clj.node.linebreak_QMARK_.cljs$core$IFn$_invoke$arity$1(G__63099__$1) : rewrite_clj.node.linebreak_QMARK_.call(null,G__63099__$1));\r\n}\r\n});\r\nrewrite_clj.zip.whitespace.comment_QMARK_ = (function rewrite_clj$zip$whitespace$comment_QMARK_(zloc){\r\nvar G__63100 = zloc;\r\nvar G__63100__$1 = (((G__63100 == null))?null:clojure.zip.node(G__63100));\r\nif((G__63100__$1 == null)){\r\nreturn null;\r\n} else {\r\nreturn (rewrite_clj.node.comment_QMARK_.cljs$core$IFn$_invoke$arity$1 ? rewrite_clj.node.comment_QMARK_.cljs$core$IFn$_invoke$arity$1(G__63100__$1) : rewrite_clj.node.comment_QMARK_.call(null,G__63100__$1));\r\n}\r\n});\r\nrewrite_clj.zip.whitespace.whitespace_not_linebreak_QMARK_ = (function rewrite_clj$zip$whitespace$whitespace_not_linebreak_QMARK_(zloc){\r\nvar and__4115__auto__ = rewrite_clj.zip.whitespace.whitespace_QMARK_(zloc);\r\nif(cljs.core.truth_(and__4115__auto__)){\r\nreturn cljs.core.not(rewrite_clj.zip.whitespace.linebreak_QMARK_(zloc));\r\n} else {\r\nreturn and__4115__auto__;\r\n}\r\n});\r\nrewrite_clj.zip.whitespace.whitespace_or_comment_QMARK_ = (function rewrite_clj$zip$whitespace$whitespace_or_comment_QMARK_(zloc){\r\nvar G__63102 = zloc;\r\nvar G__63102__$1 = (((G__63102 == null))?null:clojure.zip.node(G__63102));\r\nif((G__63102__$1 == null)){\r\nreturn null;\r\n} else {\r\nreturn rewrite_clj.node.whitespace_or_comment_QMARK_(G__63102__$1);\r\n}\r\n});\r\n/**\r\n * Perform the given movement while the given predicate returns true.\r\n */\r\nrewrite_clj.zip.whitespace.skip = (function rewrite_clj$zip$whitespace$skip(f,p_QMARK_,zloc){\r\nreturn cljs.core.first(cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(p_QMARK_,cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(clojure.zip.end_QMARK_),cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.identity,cljs.core.iterate(f,zloc)))));\r\n});\r\n/**\r\n * Perform the given movement (default: `z/right`) until a non-whitespace/\r\n * non-comment node is encountered.\r\n */\r\nrewrite_clj.zip.whitespace.skip_whitespace = (function rewrite_clj$zip$whitespace$skip_whitespace(var_args){\r\nvar G__63105 = arguments.length;\r\nswitch (G__63105) {\r\ncase 1:\r\nreturn rewrite_clj.zip.whitespace.skip_whitespace.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ncase 2:\r\nreturn rewrite_clj.zip.whitespace.skip_whitespace.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\r\n\r\n}\r\n});\r\n\r\n(rewrite_clj.zip.whitespace.skip_whitespace.cljs$core$IFn$_invoke$arity$1 = (function (zloc){\r\nreturn rewrite_clj.zip.whitespace.skip_whitespace.cljs$core$IFn$_invoke$arity$2(clojure.zip.right,zloc);\r\n}));\r\n\r\n(rewrite_clj.zip.whitespace.skip_whitespace.cljs$core$IFn$_invoke$arity$2 = (function (f,zloc){\r\nreturn rewrite_clj.zip.whitespace.skip(f,rewrite_clj.zip.whitespace.whitespace_or_comment_QMARK_,zloc);\r\n}));\r\n\r\n(rewrite_clj.zip.whitespace.skip_whitespace.cljs$lang$maxFixedArity = 2);\r\n\r\n/**\r\n * Move left until a non-whitespace/non-comment node is encountered.\r\n */\r\nrewrite_clj.zip.whitespace.skip_whitespace_left = (function rewrite_clj$zip$whitespace$skip_whitespace_left(zloc){\r\nreturn rewrite_clj.zip.whitespace.skip_whitespace.cljs$core$IFn$_invoke$arity$2(clojure.zip.left,zloc);\r\n});\r\n/**\r\n * Prepend a whitespace node representing the given number of spaces (default: 1).\r\n */\r\nrewrite_clj.zip.whitespace.prepend_space = (function rewrite_clj$zip$whitespace$prepend_space(var_args){\r\nvar G__63107 = arguments.length;\r\nswitch (G__63107) {\r\ncase 1:\r\nreturn rewrite_clj.zip.whitespace.prepend_space.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ncase 2:\r\nreturn rewrite_clj.zip.whitespace.prepend_space.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\r\n\r\n}\r\n});\r\n\r\n(rewrite_clj.zip.whitespace.prepend_space.cljs$core$IFn$_invoke$arity$1 = (function (zloc){\r\nreturn rewrite_clj.zip.whitespace.prepend_space.cljs$core$IFn$_invoke$arity$2(zloc,(1));\r\n}));\r\n\r\n(rewrite_clj.zip.whitespace.prepend_space.cljs$core$IFn$_invoke$arity$2 = (function (zloc,n){\r\nreturn clojure.zip.insert_left(zloc,(rewrite_clj.node.spaces.cljs$core$IFn$_invoke$arity$1 ? rewrite_clj.node.spaces.cljs$core$IFn$_invoke$arity$1(n) : rewrite_clj.node.spaces.call(null,n)));\r\n}));\r\n\r\n(rewrite_clj.zip.whitespace.prepend_space.cljs$lang$maxFixedArity = 2);\r\n\r\n/**\r\n * Append a whitespace node representing the given number of spaces (default: 1).\r\n */\r\nrewrite_clj.zip.whitespace.append_space = (function rewrite_clj$zip$whitespace$append_space(var_args){\r\nvar G__63110 = arguments.length;\r\nswitch (G__63110) {\r\ncase 1:\r\nreturn rewrite_clj.zip.whitespace.append_space.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ncase 2:\r\nreturn rewrite_clj.zip.whitespace.append_space.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\r\n\r\n}\r\n});\r\n\r\n(rewrite_clj.zip.whitespace.append_space.cljs$core$IFn$_invoke$arity$1 = (function (zloc){\r\nreturn rewrite_clj.zip.whitespace.append_space.cljs$core$IFn$_invoke$arity$2(zloc,(1));\r\n}));\r\n\r\n(rewrite_clj.zip.whitespace.append_space.cljs$core$IFn$_invoke$arity$2 = (function (zloc,n){\r\nreturn clojure.zip.insert_right(zloc,(rewrite_clj.node.spaces.cljs$core$IFn$_invoke$arity$1 ? rewrite_clj.node.spaces.cljs$core$IFn$_invoke$arity$1(n) : rewrite_clj.node.spaces.call(null,n)));\r\n}));\r\n\r\n(rewrite_clj.zip.whitespace.append_space.cljs$lang$maxFixedArity = 2);\r\n\r\n/**\r\n * Prepend a newlines node representing the given number of newlines (default: 1).\r\n */\r\nrewrite_clj.zip.whitespace.prepend_newline = (function rewrite_clj$zip$whitespace$prepend_newline(var_args){\r\nvar G__63112 = arguments.length;\r\nswitch (G__63112) {\r\ncase 1:\r\nreturn rewrite_clj.zip.whitespace.prepend_newline.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ncase 2:\r\nreturn rewrite_clj.zip.whitespace.prepend_newline.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\r\n\r\n}\r\n});\r\n\r\n(rewrite_clj.zip.whitespace.prepend_newline.cljs$core$IFn$_invoke$arity$1 = (function (zloc){\r\nreturn rewrite_clj.zip.whitespace.prepend_newline.cljs$core$IFn$_invoke$arity$2(zloc,(1));\r\n}));\r\n\r\n(rewrite_clj.zip.whitespace.prepend_newline.cljs$core$IFn$_invoke$arity$2 = (function (zloc,n){\r\nreturn clojure.zip.insert_left(zloc,(rewrite_clj.node.newlines.cljs$core$IFn$_invoke$arity$1 ? rewrite_clj.node.newlines.cljs$core$IFn$_invoke$arity$1(n) : rewrite_clj.node.newlines.call(null,n)));\r\n}));\r\n\r\n(rewrite_clj.zip.whitespace.prepend_newline.cljs$lang$maxFixedArity = 2);\r\n\r\n/**\r\n * Append a newline node representing the given number of newlines (default: 1).\r\n */\r\nrewrite_clj.zip.whitespace.append_newline = (function rewrite_clj$zip$whitespace$append_newline(var_args){\r\nvar G__63115 = arguments.length;\r\nswitch (G__63115) {\r\ncase 1:\r\nreturn rewrite_clj.zip.whitespace.append_newline.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ncase 2:\r\nreturn rewrite_clj.zip.whitespace.append_newline.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\r\n\r\n}\r\n});\r\n\r\n(rewrite_clj.zip.whitespace.append_newline.cljs$core$IFn$_invoke$arity$1 = (function (zloc){\r\nreturn rewrite_clj.zip.whitespace.append_newline.cljs$core$IFn$_invoke$arity$2(zloc,(1));\r\n}));\r\n\r\n(rewrite_clj.zip.whitespace.append_newline.cljs$core$IFn$_invoke$arity$2 = (function (zloc,n){\r\nreturn clojure.zip.insert_right(zloc,(rewrite_clj.node.newlines.cljs$core$IFn$_invoke$arity$1 ? rewrite_clj.node.newlines.cljs$core$IFn$_invoke$arity$1(n) : rewrite_clj.node.newlines.call(null,n)));\r\n}));\r\n\r\n(rewrite_clj.zip.whitespace.append_newline.cljs$lang$maxFixedArity = 2);\r\n\r\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","rewrite_clj/zip/whitespace.cljs","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",31],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$react","~$module$node_modules$react$index","~$react-dom","~$module$node_modules$react_dom$index","~$clojure.pprint","~$cljs.pprint","~$clojure.spec.alpha","~$cljs.spec.alpha","~$clojure.spec.gen.alpha","~$cljs.spec.gen.alpha"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$rewrite-clj.zip.whitespace","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$rewrite-clj.node","^Q","~$node","^Q","~$clojure.zip","^S","~$z","^S","~$cljs.core","^T","~$goog","^U"],"~:seen",["^J",["~:require"]],"~:uses",null,"~:require-macros",["^ ","^T","^T"],"~:form",["~#list",["~$ns","^L",["^[",["^W",["^Q","~:as","^R"],["^S","^11","~$z"]]]]],"~:flags",["^ ","^W",["^J",[]]],"~:js-deps",["^ "],"~:deps",["^U","^T","^Q","^S"]],"^N","^L","~:resource-id",["~:shadow.build.classpath/resource","rewrite_clj/zip/whitespace.cljs"],"~:compiled-at",1597165884488,"~:resource-name","rewrite_clj/zip/whitespace.cljs","~:warnings",[],"~:source","(ns rewrite-clj.zip.whitespace\n  (:require [rewrite-clj.node :as node]\n            [clojure.zip :as z]))\n\n;; ## Predicates\n\n(defn whitespace?\n  [zloc]\n  (some-> zloc z/node node/whitespace?))\n\n(defn linebreak?\n  [zloc]\n  (some-> zloc z/node node/linebreak?))\n\n(defn comment?\n  [zloc]\n  (some-> zloc z/node node/comment?))\n\n(defn whitespace-not-linebreak?\n  [zloc]\n  (and\n   (whitespace? zloc)\n   (not (linebreak? zloc))))\n\n(defn whitespace-or-comment?\n  [zloc]\n  (some-> zloc z/node node/whitespace-or-comment?))\n\n\n;; ## Movement\n\n(defn skip\n  \"Perform the given movement while the given predicate returns true.\"\n  [f p? zloc]\n  (->> (iterate f zloc)\n       (take-while identity)\n       (take-while (complement z/end?))\n       (drop-while p?)\n       (first)))\n\n(defn skip-whitespace\n  \"Perform the given movement (default: `z/right`) until a non-whitespace/\n   non-comment node is encountered.\"\n  ([zloc] (skip-whitespace z/right zloc))\n  ([f zloc] (skip f whitespace-or-comment? zloc)))\n\n(defn skip-whitespace-left\n  \"Move left until a non-whitespace/non-comment node is encountered.\"\n  [zloc]\n  (skip-whitespace z/left zloc))\n\n;; ## Insertion\n\n(defn prepend-space\n  \"Prepend a whitespace node representing the given number of spaces (default: 1).\"\n  ([zloc] (prepend-space zloc 1))\n  ([zloc n]\n   (z/insert-left zloc (node/spaces n))))\n\n(defn append-space\n  \"Append a whitespace node representing the given number of spaces (default: 1).\"\n  ([zloc] (append-space zloc 1))\n  ([zloc n]\n   (z/insert-right zloc (node/spaces n))))\n\n(defn prepend-newline\n  \"Prepend a newlines node representing the given number of newlines (default: 1).\"\n  ([zloc] (prepend-newline zloc 1))\n  ([zloc n]\n   (z/insert-left zloc (node/newlines n))))\n\n(defn append-newline\n  \"Append a newline node representing the given number of newlines (default: 1).\"\n  ([zloc] (append-newline zloc 1))\n  ([zloc n]\n   (z/insert-right zloc (node/newlines n))))\n","~:reader-features",["^J",["~:cljs"]],"~:cljc",false,"~:source-map-compact",["^ ","mappings","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","names",["rewrite-clj.zip.whitespace/whitespace?","zloc","G__63098","clojure.zip/node","rewrite-clj.node/whitespace?","rewrite-clj.zip.whitespace/linebreak?","G__63099","rewrite-clj.node/linebreak?","rewrite-clj.zip.whitespace/comment?","G__63100","rewrite-clj.node/comment?","rewrite-clj.zip.whitespace/whitespace-not-linebreak?","and__4115__auto__","cljs.core/not","rewrite-clj.zip.whitespace/whitespace-or-comment?","G__63102","rewrite-clj.node/whitespace-or-comment?","rewrite-clj.zip.whitespace/skip","f","p?","cljs.core/iterate","cljs.core.take_while","cljs.core/identity","cljs.core/complement","clojure.zip/end?","cljs.core.drop_while","cljs.core/first","var_args","G__63105","rewrite-clj.zip.whitespace/skip-whitespace","js/Error","rewrite_clj.zip.whitespace.skip_whitespace","clojure.zip/right","rewrite-clj.zip.whitespace/skip-whitespace-left","clojure.zip/left","G__63107","rewrite-clj.zip.whitespace/prepend-space","rewrite_clj.zip.whitespace.prepend_space","n","clojure.zip/insert-left","rewrite-clj.node/spaces","G__63110","rewrite-clj.zip.whitespace/append-space","rewrite_clj.zip.whitespace.append_space","clojure.zip/insert-right","G__63112","rewrite-clj.zip.whitespace/prepend-newline","rewrite_clj.zip.whitespace.prepend_newline","rewrite-clj.node/newlines","G__63115","rewrite-clj.zip.whitespace/append-newline","rewrite_clj.zip.whitespace.append_newline"]],"~:used-vars",["^J",["~$rewrite-clj.zip.whitespace/prepend-space","~$rewrite-clj.zip.whitespace/comment?","~$rewrite-clj.zip.whitespace/whitespace-not-linebreak?","~$rewrite-clj.zip.whitespace/append-newline","~$clojure.zip/end?","~$rewrite-clj.zip.whitespace/prepend-newline","~$cljs.core/take-while","~$cljs.core/drop-while","~$rewrite-clj.zip.whitespace/append-space","~$rewrite-clj.zip.whitespace/whitespace-or-comment?","~$cljs.core/identity","~$rewrite-clj.node/comment?","~$cljs.core/iterate","~$rewrite-clj.zip.whitespace/whitespace?","~$rewrite-clj.node/spaces","~$rewrite-clj.zip.whitespace/skip-whitespace-left","~$clojure.zip/insert-right","~$rewrite-clj.zip.whitespace/skip","~$rewrite-clj.node/whitespace-or-comment?","~$rewrite-clj.node/whitespace?","~$clojure.zip/insert-left","~$rewrite-clj.node/linebreak?","~$clojure.zip/right","~$cljs.core/not","~$cljs.core/complement","~$rewrite-clj.node/newlines","~$rewrite-clj.zip.whitespace/linebreak?","~$cljs.core/first","~$js/Error","~$clojure.zip/left","~$rewrite-clj.zip.whitespace/skip-whitespace"]]],"~:cache-keys",["~#cmap",[["^16","goog/dom/tagname.js"],["6025affb7181cd40418600864f58eed1ea80055d","~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^J",[]],"~:deps-syms",["^U","~$goog.dom.HtmlElement"]]],["^16","rewrite_clj/node/token.cljs"],["dd14a371d0d09eedccb39f01e3edabefb2d1e64f","^27",["^ ","^28",null,"^29",["^J",[]],"^2:",["^U","^T","~$rewrite-clj.node.protocols"]]],["^16","cljs/tools/reader/impl/utils.cljs"],["b4dce2f71625d60fe1fd6a95816017811dd73522","^27",["^ ","^28",null,"^29",["^J",[]],"^2:",["^U","^T","~$clojure.string","~$goog.string"]]],["^16","goog/math/math.js"],["6025affb7181cd40418600864f58eed1ea80055d","^27",["^ ","^28",null,"^29",["^J",[]],"^2:",["^U","~$goog.array","~$goog.asserts"]]],["^16","goog/html/trustedtypes.js"],["6025affb7181cd40418600864f58eed1ea80055d","^27",["^ ","^28",null,"^29",["^J",[]],"^2:",["^U"]]],["^16","goog/labs/useragent/browser.js"],["6025affb7181cd40418600864f58eed1ea80055d","^27",["^ ","^28",null,"^29",["^J",[]],"^2:",["^U","^2?","~$goog.labs.userAgent.util","~$goog.object","~$goog.string.internal"]]],["^16","goog/html/safeurl.js"],["6025affb7181cd40418600864f58eed1ea80055d","^27",["^ ","^28",null,"^29",["^J",[]],"^2:",["^U","^2@","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.i18n.bidi.Dir","~$goog.i18n.bidi.DirectionalString","~$goog.string.Const","~$goog.string.TypedString","^2C"]]],["^16","goog/array/array.js"],["6025affb7181cd40418600864f58eed1ea80055d","^27",["^ ","^28",null,"^29",["^J",[]],"^2:",["^U","^2@"]]],["^16","goog/debug/error.js"],["6025affb7181cd40418600864f58eed1ea80055d","^27",["^ ","^28",null,"^29",["^J",[]],"^2:",["^U"]]],["^16","goog/dom/nodetype.js"],["6025affb7181cd40418600864f58eed1ea80055d","^27",["^ ","^28",null,"^29",["^J",[]],"^2:",["^U"]]],["^16","cljs/tools/reader/impl/inspect.cljs"],["b4dce2f71625d60fe1fd6a95816017811dd73522","^27",["^ ","^28",null,"^29",["^J",[]],"^2:",["^U","^T"]]],["^16","cljs/tools/reader.cljs"],["b4dce2f71625d60fe1fd6a95816017811dd73522","^27",["^ ","^28",null,"^29",["^J",[]],"^2:",["^U","^T","~$cljs.tools.reader.reader-types","~$cljs.tools.reader.impl.utils","~$cljs.tools.reader.impl.commons","~$cljs.tools.reader.impl.errors","^2?","^2>","~$goog.string.StringBuffer"]]],["^16","rewrite_clj/node/forms.cljs"],["dd14a371d0d09eedccb39f01e3edabefb2d1e64f","^27",["^ ","^28",null,"^29",["^J",[]],"^2:",["^U","^T","^2<"]]],["^16","goog/string/typedstring.js"],["6025affb7181cd40418600864f58eed1ea80055d","^27",["^ ","^28",null,"^29",["^J",[]],"^2:",["^U"]]],["^16","goog/object/object.js"],["6025affb7181cd40418600864f58eed1ea80055d","^27",["^ ","^28",null,"^29",["^J",[]],"^2:",["^U"]]],["^16","goog/dom/asserts.js"],["6025affb7181cd40418600864f58eed1ea80055d","^27",["^ ","^28",null,"^29",["^J",[]],"^2:",["^U","^2@"]]],"~:SHADOW-TIMESTAMP",[1596134675000,1596134675000,1594142852000],["^16","goog/math/long.js"],["6025affb7181cd40418600864f58eed1ea80055d","^27",["^ ","^28",null,"^29",["^J",[]],"^2:",["^U","^2@","~$goog.reflect"]]],["^16","rewrite_clj/node/reader_macro.cljs"],["dd14a371d0d09eedccb39f01e3edabefb2d1e64f","^27",["^ ","^28",null,"^29",["^J",[]],"^2:",["^U","^T","^2<","~$rewrite-clj.node.whitespace"]]],["^16","goog/html/trustedresourceurl.js"],["6025affb7181cd40418600864f58eed1ea80055d","^27",["^ ","^28",null,"^29",["^J",[]],"^2:",["^U","^2@","~$goog.html.trustedtypes","^2F","^2G","^2H","^2I"]]],["^16","goog/string/internal.js"],["6025affb7181cd40418600864f58eed1ea80055d","^27",["^ ","^28",null,"^29",["^J",[]],"^2:",["^U"]]],["^16","goog/functions/functions.js"],["6025affb7181cd40418600864f58eed1ea80055d","^27",["^ ","^28",null,"^29",["^J",[]],"^2:",["^U"]]],["^16","goog/html/safestyle.js"],["6025affb7181cd40418600864f58eed1ea80055d","^27",["^ ","^28",null,"^29",["^J",[]],"^2:",["^U","^2?","^2@","~$goog.html.SafeUrl","^2H","^2I","^2C"]]],["^16","goog/dom/safe.js"],["6025affb7181cd40418600864f58eed1ea80055d","^27",["^ ","^28",null,"^29",["^J",[]],"^2:",["^U","^2@","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","~$goog.html.SafeScript","~$goog.html.SafeStyle","^2S","^2E","~$goog.html.uncheckedconversions","^2H","^2C"]]],["^16","clojure/walk.cljs"],["9f9729dbbf9b814c83dc189977b447d2ae92b6cd","^27",["^ ","^28",null,"^29",["^J",[]],"^2:",["^U","^T"]]],["^16","goog/structs/map.js"],["6025affb7181cd40418600864f58eed1ea80055d","^27",["^ ","^28",null,"^29",["^J",[]],"^2:",["^U","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^16","rewrite_clj/node/meta.cljs"],["dd14a371d0d09eedccb39f01e3edabefb2d1e64f","^27",["^ ","^28",null,"^29",["^J",[]],"^2:",["^U","^T","^2<","^2Q"]]],["^16","goog/html/safehtml.js"],["6025affb7181cd40418600864f58eed1ea80055d","^27",["^ ","^28",null,"^29",["^J",[]],"^2:",["^U","^2?","^2@","~$goog.dom.TagName","~$goog.dom.tags","^2W","^2X","~$goog.html.SafeStyleSheet","^2S","^2E","^2R","^2F","^2G","~$goog.labs.userAgent.browser","^2B","^2H","^2I","^2C"]]],["^16","goog/dom/tags.js"],["6025affb7181cd40418600864f58eed1ea80055d","^27",["^ ","^28",null,"^29",["^J",[]],"^2:",["^U","^2B"]]],["^16","rewrite_clj/node/stringz.cljs"],["dd14a371d0d09eedccb39f01e3edabefb2d1e64f","^27",["^ ","^28",null,"^29",["^J",[]],"^2:",["^U","^T","^2<","~$cljs.tools.reader","^2="]]],["^16","rewrite_clj/node/comment.cljs"],["dd14a371d0d09eedccb39f01e3edabefb2d1e64f","^27",["^ ","^28",null,"^29",["^J",[]],"^2:",["^U","^T","^2<"]]],["^16","rewrite_clj/node/keyword.cljs"],["dd14a371d0d09eedccb39f01e3edabefb2d1e64f","^27",["^ ","^28",null,"^29",["^J",[]],"^2:",["^U","^T","^2<"]]],["^16","goog/asserts/asserts.js"],["6025affb7181cd40418600864f58eed1ea80055d","^27",["^ ","^28",null,"^29",["^J",[]],"^2:",["^U","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^16","goog/uri/uri.js"],["6025affb7181cd40418600864f58eed1ea80055d","^27",["^ ","^28",null,"^29",["^J",[]],"^2:",["^U","^2?","^2@","^2>","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^16","goog/i18n/bidi.js"],["6025affb7181cd40418600864f58eed1ea80055d","^27",["^ ","^28",null,"^29",["^J",[]],"^2:",["^U"]]],["^16","rewrite_clj/node/protocols.cljs"],["dd14a371d0d09eedccb39f01e3edabefb2d1e64f","^27",["^ ","^28",null,"^29",["^J",[]],"^2:",["^U","^T","^2="]]],["^16","rewrite_clj/node/seq.cljs"],["dd14a371d0d09eedccb39f01e3edabefb2d1e64f","^27",["^ ","^28",null,"^29",["^J",[]],"^2:",["^U","^T","^2<"]]],["^16","rewrite_clj/node/uneval.cljs"],["dd14a371d0d09eedccb39f01e3edabefb2d1e64f","^27",["^ ","^28",null,"^29",["^J",[]],"^2:",["^U","^T","^2<"]]],["^16","goog/fs/url.js"],["6025affb7181cd40418600864f58eed1ea80055d","^27",["^ ","^28",null,"^29",["^J",[]],"^2:",["^U"]]],["^16","goog/base.js"],["6025affb7181cd40418600864f58eed1ea80055d","^27",["^ ","^28",null,"^29",["^J",[]],"^2:",[]]],["^16","goog/structs/structs.js"],["6025affb7181cd40418600864f58eed1ea80055d","^27",["^ ","^28",null,"^29",["^J",[]],"^2:",["^U","^2?","^2B"]]],["^16","cljs/tools/reader/impl/errors.cljs"],["b4dce2f71625d60fe1fd6a95816017811dd73522","^27",["^ ","^28",null,"^29",["^J",[]],"^2:",["^U","^T","^2J","^2=","~$cljs.tools.reader.impl.inspect"]]],["^16","rewrite_clj/node/whitespace.cljs"],["dd14a371d0d09eedccb39f01e3edabefb2d1e64f","^27",["^ ","^28",null,"^29",["^J",[]],"^2:",["^U","^T","^2<"]]],["^16","rewrite_clj/node/coercer.cljs"],["dd14a371d0d09eedccb39f01e3edabefb2d1e64f","^27",["^ ","^28",null,"^29",["^J",[]],"^2:",["^U","^T","~$rewrite-clj.node.comment","~$rewrite-clj.node.forms","~$rewrite-clj.node.keyword","~$rewrite-clj.node.quote","~$rewrite-clj.node.stringz","~$rewrite-clj.node.uneval","~$rewrite-clj.node.meta","~$rewrite-clj.node.fn","^2<","~$rewrite-clj.node.reader-macro","~$rewrite-clj.node.seq","~$rewrite-clj.node.token","^2Q"]]],["^16","clojure/string.cljs"],["9f9729dbbf9b814c83dc189977b447d2ae92b6cd","^27",["^ ","^28",null,"^29",["^J",[]],"^2:",["^U","^T","^2>","^2N"]]],["^16","goog/string/string.js"],["6025affb7181cd40418600864f58eed1ea80055d","^27",["^ ","^28",null,"^29",["^J",[]],"^2:",["^U","~$goog.dom.safe","^2Y","^2H","^2C"]]],["^16","goog/reflect/reflect.js"],["6025affb7181cd40418600864f58eed1ea80055d","^27",["^ ","^28",null,"^29",["^J",[]],"^2:",["^U"]]],["^16","rewrite_clj/node/fn.cljs"],["dd14a371d0d09eedccb39f01e3edabefb2d1e64f","^27",["^ ","^28",null,"^29",["^J",[]],"^2:",["^U","^T","^2<","~$clojure.walk"]]],["^16","goog/labs/useragent/util.js"],["6025affb7181cd40418600864f58eed1ea80055d","^27",["^ ","^28",null,"^29",["^J",[]],"^2:",["^U","^2C"]]],["^16","rewrite_clj/node.cljs"],["dd14a371d0d09eedccb39f01e3edabefb2d1e64f","^27",["^ ","^28",null,"^29",["^J",[]],"^2:",["^U","^T","~$rewrite-clj.node.coercer","^2<","^3?","^3F","^2Q","^3G","^3=","^3>","^3C","^3A","^3E","^3@","^3B","^3D"]]],["^16","clojure/zip.cljs"],["9f9729dbbf9b814c83dc189977b447d2ae92b6cd","^27",["^ ","^28",null,"^29",["^J",[]],"^2:",["^U","^T"]]],["^16","goog/string/stringbuffer.js"],["6025affb7181cd40418600864f58eed1ea80055d","^27",["^ ","^28",null,"^29",["^J",[]],"^2:",["^U"]]],["^16","cljs/tools/reader/reader_types.cljs"],["b4dce2f71625d60fe1fd6a95816017811dd73522","^27",["^ ","^28",null,"^29",["^J",[]],"^2:",["^U","^T","^2K","^2>","^2N"]]],["^16","goog/iter/iter.js"],["6025affb7181cd40418600864f58eed1ea80055d","^27",["^ ","^28",null,"^29",["^J",[]],"^2:",["^U","^2?","^2@","^2U","~$goog.math"]]],["^16","goog/html/uncheckedconversions.js"],["6025affb7181cd40418600864f58eed1ea80055d","^27",["^ ","^28",null,"^29",["^J",[]],"^2:",["^U","^2@","^2V","^2W","^2X","^32","^2S","^2E","^2H","^2C"]]],["^16","rewrite_clj/node/quote.cljs"],["dd14a371d0d09eedccb39f01e3edabefb2d1e64f","^27",["^ ","^28",null,"^29",["^J",[]],"^2:",["^U","^T","^2<"]]],["^16","cljs/tools/reader/impl/commons.cljs"],["b4dce2f71625d60fe1fd6a95816017811dd73522","^27",["^ ","^28",null,"^29",["^J",[]],"^2:",["^U","^T","^2M","^2J","^2K"]]],["^16","goog/dom/htmlelement.js"],["6025affb7181cd40418600864f58eed1ea80055d","^27",["^ ","^28",null,"^29",["^J",[]],"^2:",["^U"]]],["^16","cljs/core.cljs"],["9f9729dbbf9b814c83dc189977b447d2ae92b6cd","^27",["^ ","^28",null,"^29",["^J",[]],"^2:",["^U","~$goog.math.Long","~$goog.math.Integer","^2>","^2B","^2?","~$goog.Uri","^2N"]]],["^16","goog/html/safescript.js"],["6025affb7181cd40418600864f58eed1ea80055d","^27",["^ ","^28",null,"^29",["^J",[]],"^2:",["^U","^2@","^2R","^2H","^2I"]]],["^16","goog/html/safestylesheet.js"],["6025affb7181cd40418600864f58eed1ea80055d","^27",["^ ","^28",null,"^29",["^J",[]],"^2:",["^U","^2?","^2@","^2X","^2B","^2H","^2I","^2C"]]],["^16","goog/math/integer.js"],["6025affb7181cd40418600864f58eed1ea80055d","^27",["^ ","^28",null,"^29",["^J",[]],"^2:",["^U","^2P"]]],["^16","goog/uri/utils.js"],["6025affb7181cd40418600864f58eed1ea80055d","^27",["^ ","^28",null,"^29",["^J",[]],"^2:",["^U","^2?","^2@","^2>"]]],["^16","goog/string/const.js"],["6025affb7181cd40418600864f58eed1ea80055d","^27",["^ ","^28",null,"^29",["^J",[]],"^2:",["^U","^2@","^2I"]]],["^16","rewrite_clj/zip/whitespace.cljs"],["dd14a371d0d09eedccb39f01e3edabefb2d1e64f","^27",["^ ","^28",null,"^29",["^J",[]],"^2:",["^U","^T","^Q","^S"]]]]],"~:clj-info",["^ ","jar:file:/C:/Users/BlackHammer09/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/source_map.clj",1594142852000,"jar:file:/C:/Users/BlackHammer09/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/js_deps.cljc",1594142852000,"jar:file:/C:/Users/BlackHammer09/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/analyzer.cljc",1594142852000,"jar:file:/C:/Users/BlackHammer09/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/edn.clj",1592834825000,"jar:file:/C:/Users/BlackHammer09/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/instant.clj",1592834825000,"jar:file:/C:/Users/BlackHammer09/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/externs.clj",1594142852000,"jar:file:/C:/Users/BlackHammer09/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/tagged_literals.cljc",1594142852000,"jar:file:/C:/Users/BlackHammer09/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/set.clj",1592834825000,"jar:file:/C:/Users/BlackHammer09/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/pprint.clj",1592834825000,"jar:file:/C:/Users/BlackHammer09/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader.clj",1594142850000,"jar:file:/C:/Users/BlackHammer09/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/reader_types.clj",1594142850000,"jar:file:/C:/Users/BlackHammer09/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/string.clj",1592834825000,"jar:file:/C:/Users/BlackHammer09/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/default_data_readers.clj",1594142850000,"jar:file:/C:/Users/BlackHammer09/.m2/repository/org/clojure/data.json/0.2.6/data.json-0.2.6.jar!/clojure/data/json.clj",1594134806000,"jar:file:/C:/Users/BlackHammer09/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/util.cljc",1594142852000,"jar:file:/C:/Users/BlackHammer09/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/java/io.clj",1592834825000,"jar:file:/C:/Users/BlackHammer09/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/core.cljc",1594142852000,"jar:file:/C:/Users/BlackHammer09/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/source_map/base64.clj",1594142852000,"jar:file:/C:/Users/BlackHammer09/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/source_map/base64_vlq.clj",1594142852000,"jar:file:/C:/Users/BlackHammer09/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/compiler.cljc",1594142852000,"jar:file:/C:/Users/BlackHammer09/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/core.clj",1592834825000,"jar:file:/C:/Users/BlackHammer09/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/impl/inspect.clj",1594142850000,"jar:file:/C:/Users/BlackHammer09/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/env.cljc",1594142852000,"jar:file:/C:/Users/BlackHammer09/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/impl/errors.clj",1594142850000,"jar:file:/C:/Users/BlackHammer09/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/cljs/tools/reader/reader_types.clj",1594142850000,"jar:file:/C:/Users/BlackHammer09/.m2/repository/binaryage/devtools/1.0.2/devtools-1.0.2.jar!/devtools/defaults.clj",1594142858000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","rewrite_clj/zip/whitespace.cljs","^7",1,"^8",5,"^9",1,"^:",31],"^;",["^ ","^<","^=","^>","^?","^@","^A","^B","^C","^D","^E","^F","^G"],"^H",null,"^I",["^J",[]],"^K","^L","^O",null,"^P",["^ ","^Q","^Q","^R","^Q","^S","^S","~$z","^S","^T","^T","^U","^U"],"^V",["^J",["^W"]],"~:shadow/js-access-global",["^J",["Error"]],"^X",null,"~:defs",["^ ","~$whitespace?",["^ ","~:protocol-inline",null,"^5",["^ ","^6","rewrite_clj/zip/whitespace.cljs","^7",7,"^8",7,"^9",7,"^:",18,"~:arglists",["^[",["~$quote",["^[",[["~$zloc"]]]]]],"^K","^1O","^6","rewrite_clj/zip/whitespace.cljs","^:",18,"~:method-params",["^[",[["^4E"]]],"~:protocol-impl",null,"~:arglists-meta",["^[",[null,null]],"^8",1,"~:variadic?",false,"^7",7,"~:ret-tag",["^J",["~$any","~$clj-nil"]],"^9",7,"~:max-fixed-arity",1,"~:fn-var",true,"^4C",["^[",["^4D",["^[",[["^4E"]]]]]],"~$linebreak?",["^ ","^4B",null,"^5",["^ ","^6","rewrite_clj/zip/whitespace.cljs","^7",11,"^8",7,"^9",11,"^:",17,"^4C",["^[",["^4D",["^[",[["^4E"]]]]]],"^K","^20","^6","rewrite_clj/zip/whitespace.cljs","^:",17,"^4F",["^[",[["^4E"]]],"^4G",null,"^4H",["^[",[null,null]],"^8",1,"^4I",false,"^7",11,"^4J",["^J",["^4K","^4L"]],"^9",11,"^4M",1,"^4N",true,"^4C",["^[",["^4D",["^[",[["^4E"]]]]]],"~$skip",["^ ","^4B",null,"^5",["^ ","^6","rewrite_clj/zip/whitespace.cljs","^7",32,"^8",7,"^9",32,"^:",11,"^4C",["^[",["^4D",["^[",[["~$f","~$p?","^4E"]]]]],"~:doc","Perform the given movement while the given predicate returns true."],"^K","^1S","^6","rewrite_clj/zip/whitespace.cljs","^:",11,"^4F",["^[",[["~$f","^4Q","^4E"]]],"^4G",null,"^4H",["^[",[null,null]],"^8",1,"^4I",false,"^7",32,"^4J",["^J",["^4K","^4L"]],"^9",32,"^4M",3,"^4N",true,"^4C",["^[",["^4D",["^[",[["~$f","^4Q","^4E"]]]]],"^4R","Perform the given movement while the given predicate returns true."],"~$prepend-space",["^ ","^4B",null,"^5",["^ ","^6","rewrite_clj/zip/whitespace.cljs","^7",54,"^8",7,"^9",54,"^:",20,"^4C",["^[",["^4D",["^[",[["^4E"],["^4E","~$n"]]]]],"^4R","Prepend a whitespace node representing the given number of spaces (default: 1).","~:top-fn",["^ ","^4I",false,"~:fixed-arity",2,"^4M",2,"^4F",[["^4E"],["^4E","~$n"]],"^4C",["^[",[["^4E"],["^4E","~$n"]]],"^4H",["^[",[null,null]]]],"^K","^1B","^6","rewrite_clj/zip/whitespace.cljs","^:",20,"^4T",["^ ","^4I",false,"^4U",2,"^4M",2,"^4F",[["^4E"],["^4E","~$n"]],"^4C",["^[",[["^4E"],["^4E","~$n"]]],"^4H",["^[",[null,null]]],"^4F",[["^4E"],["^4E","~$n"]],"^4G",null,"^4U",2,"^4H",["^[",[null,null]],"^8",1,"^4I",false,"~:methods",[["^ ","^4U",1,"^4I",false,"~:tag","^4K"],["^ ","^4U",2,"^4I",false,"^4W",["^J",["~$clj","~$cljs.core/MetaFn","^4L"]]]],"^7",54,"^9",54,"^4M",2,"^4N",true,"^4C",["^[",[["^4E"],["^4E","~$n"]]],"^4R","Prepend a whitespace node representing the given number of spaces (default: 1)."],"~$append-newline",["^ ","^4B",null,"^5",["^ ","^6","rewrite_clj/zip/whitespace.cljs","^7",72,"^8",7,"^9",72,"^:",21,"^4C",["^[",["^4D",["^[",[["^4E"],["^4E","~$n"]]]]],"^4R","Append a newline node representing the given number of newlines (default: 1).","^4T",["^ ","^4I",false,"^4U",2,"^4M",2,"^4F",[["^4E"],["^4E","~$n"]],"^4C",["^[",[["^4E"],["^4E","~$n"]]],"^4H",["^[",[null,null]]]],"^K","^1E","^6","rewrite_clj/zip/whitespace.cljs","^:",21,"^4T",["^ ","^4I",false,"^4U",2,"^4M",2,"^4F",[["^4E"],["^4E","~$n"]],"^4C",["^[",[["^4E"],["^4E","~$n"]]],"^4H",["^[",[null,null]]],"^4F",[["^4E"],["^4E","~$n"]],"^4G",null,"^4U",2,"^4H",["^[",[null,null]],"^8",1,"^4I",false,"^4V",[["^ ","^4U",1,"^4I",false,"^4W","^4K"],["^ ","^4U",2,"^4I",false,"^4W",["^J",["^4X","^4Y","^4L"]]]],"^7",72,"^9",72,"^4M",2,"^4N",true,"^4C",["^[",[["^4E"],["^4E","~$n"]]],"^4R","Append a newline node representing the given number of newlines (default: 1)."],"~$prepend-newline",["^ ","^4B",null,"^5",["^ ","^6","rewrite_clj/zip/whitespace.cljs","^7",66,"^8",7,"^9",66,"^:",22,"^4C",["^[",["^4D",["^[",[["^4E"],["^4E","~$n"]]]]],"^4R","Prepend a newlines node representing the given number of newlines (default: 1).","^4T",["^ ","^4I",false,"^4U",2,"^4M",2,"^4F",[["^4E"],["^4E","~$n"]],"^4C",["^[",[["^4E"],["^4E","~$n"]]],"^4H",["^[",[null,null]]]],"^K","^1G","^6","rewrite_clj/zip/whitespace.cljs","^:",22,"^4T",["^ ","^4I",false,"^4U",2,"^4M",2,"^4F",[["^4E"],["^4E","~$n"]],"^4C",["^[",[["^4E"],["^4E","~$n"]]],"^4H",["^[",[null,null]]],"^4F",[["^4E"],["^4E","~$n"]],"^4G",null,"^4U",2,"^4H",["^[",[null,null]],"^8",1,"^4I",false,"^4V",[["^ ","^4U",1,"^4I",false,"^4W","^4K"],["^ ","^4U",2,"^4I",false,"^4W",["^J",["^4X","^4Y","^4L"]]]],"^7",66,"^9",66,"^4M",2,"^4N",true,"^4C",["^[",[["^4E"],["^4E","~$n"]]],"^4R","Prepend a newlines node representing the given number of newlines (default: 1)."],"~$append-space",["^ ","^4B",null,"^5",["^ ","^6","rewrite_clj/zip/whitespace.cljs","^7",60,"^8",7,"^9",60,"^:",19,"^4C",["^[",["^4D",["^[",[["^4E"],["^4E","~$n"]]]]],"^4R","Append a whitespace node representing the given number of spaces (default: 1).","^4T",["^ ","^4I",false,"^4U",2,"^4M",2,"^4F",[["^4E"],["^4E","~$n"]],"^4C",["^[",[["^4E"],["^4E","~$n"]]],"^4H",["^[",[null,null]]]],"^K","^1J","^6","rewrite_clj/zip/whitespace.cljs","^:",19,"^4T",["^ ","^4I",false,"^4U",2,"^4M",2,"^4F",[["^4E"],["^4E","~$n"]],"^4C",["^[",[["^4E"],["^4E","~$n"]]],"^4H",["^[",[null,null]]],"^4F",[["^4E"],["^4E","~$n"]],"^4G",null,"^4U",2,"^4H",["^[",[null,null]],"^8",1,"^4I",false,"^4V",[["^ ","^4U",1,"^4I",false,"^4W","^4K"],["^ ","^4U",2,"^4I",false,"^4W",["^J",["^4X","^4Y","^4L"]]]],"^7",60,"^9",60,"^4M",2,"^4N",true,"^4C",["^[",[["^4E"],["^4E","~$n"]]],"^4R","Append a whitespace node representing the given number of spaces (default: 1)."],"~$skip-whitespace-left",["^ ","^4B",null,"^5",["^ ","^6","rewrite_clj/zip/whitespace.cljs","^7",47,"^8",7,"^9",47,"^:",27,"^4C",["^[",["^4D",["^[",[["^4E"]]]]],"^4R","Move left until a non-whitespace/non-comment node is encountered."],"^K","^1Q","^6","rewrite_clj/zip/whitespace.cljs","^:",27,"^4F",["^[",[["^4E"]]],"^4G",null,"^4H",["^[",[null,null]],"^8",1,"^4I",false,"^7",47,"^4J",["^J",["^4K","^4L"]],"^9",47,"^4M",1,"^4N",true,"^4C",["^[",["^4D",["^[",[["^4E"]]]]],"^4R","Move left until a non-whitespace/non-comment node is encountered."],"~$skip-whitespace",["^ ","^4B",null,"^5",["^ ","^6","rewrite_clj/zip/whitespace.cljs","^7",41,"^8",7,"^9",41,"^:",22,"^4C",["^[",["^4D",["^[",[["^4E"],["~$f","^4E"]]]]],"^4R","Perform the given movement (default: `z/right`) until a non-whitespace/\n   non-comment node is encountered.","^4T",["^ ","^4I",false,"^4U",2,"^4M",2,"^4F",[["^4E"],["~$f","^4E"]],"^4C",["^[",[["^4E"],["~$f","^4E"]]],"^4H",["^[",[null,null]]]],"^K","^24","^6","rewrite_clj/zip/whitespace.cljs","^:",22,"^4T",["^ ","^4I",false,"^4U",2,"^4M",2,"^4F",[["^4E"],["~$f","^4E"]],"^4C",["^[",[["^4E"],["~$f","^4E"]]],"^4H",["^[",[null,null]]],"^4F",[["^4E"],["~$f","^4E"]],"^4G",null,"^4U",2,"^4H",["^[",[null,null]],"^8",1,"^4I",false,"^4V",[["^ ","^4U",1,"^4I",false,"^4W","^4K"],["^ ","^4U",2,"^4I",false,"^4W",["^J",["^4K","^4L"]]]],"^7",41,"^9",41,"^4M",2,"^4N",true,"^4C",["^[",[["^4E"],["~$f","^4E"]]],"^4R","Perform the given movement (default: `z/right`) until a non-whitespace/\n   non-comment node is encountered."],"~$comment?",["^ ","^4B",null,"^5",["^ ","^6","rewrite_clj/zip/whitespace.cljs","^7",15,"^8",7,"^9",15,"^:",15,"^4C",["^[",["^4D",["^[",[["^4E"]]]]]],"^K","^1C","^6","rewrite_clj/zip/whitespace.cljs","^:",15,"^4F",["^[",[["^4E"]]],"^4G",null,"^4H",["^[",[null,null]],"^8",1,"^4I",false,"^7",15,"^4J",["^J",["^4K","^4L"]],"^9",15,"^4M",1,"^4N",true,"^4C",["^[",["^4D",["^[",[["^4E"]]]]]],"~$whitespace-not-linebreak?",["^ ","^4B",null,"^5",["^ ","^6","rewrite_clj/zip/whitespace.cljs","^7",19,"^8",7,"^9",19,"^:",32,"^4C",["^[",["^4D",["^[",[["^4E"]]]]]],"^K","^1D","^6","rewrite_clj/zip/whitespace.cljs","^:",32,"^4F",["^[",[["^4E"]]],"^4G",null,"^4H",["^[",[null,null]],"^8",1,"^4I",false,"^7",19,"^4J",["^J",["~$boolean","^4K","^4L"]],"^9",19,"^4M",1,"^4N",true,"^4C",["^[",["^4D",["^[",[["^4E"]]]]]],"~$whitespace-or-comment?",["^ ","^4B",null,"^5",["^ ","^6","rewrite_clj/zip/whitespace.cljs","^7",25,"^8",7,"^9",25,"^:",29,"^4C",["^[",["^4D",["^[",[["^4E"]]]]]],"^K","^1K","^6","rewrite_clj/zip/whitespace.cljs","^:",29,"^4F",["^[",[["^4E"]]],"^4G",null,"^4H",["^[",[null,null]],"^8",1,"^4I",false,"^7",25,"^4J",["^J",["^4K","^4L"]],"^9",25,"^4M",1,"^4N",true,"^4C",["^[",["^4D",["^[",[["^4E"]]]]]]],"^Y",["^ ","^T","^T"],"^12",["^ ","^W",["^J",[]]],"^13",["^ "],"^14",["^U","^T","^Q","^S"]],"^N","^L","~:ns-specs",["^ "],"~:ns-spec-vars",["^J",[]],"~:compiler-options",["^26",[["^59","~:static-fns"],true,["^59","~:shadow-tweaks"],null,["^59","~:source-map-inline"],null,["^59","~:elide-asserts"],false,["^59","~:optimize-constants"],null,["^59","^19"],null,["^59","~:external-config"],null,["^59","~:tooling-config"],null,["^59","~:emit-constants"],null,["^59","~:load-tests"],null,["^59","~:form-size-threshold"],null,["^59","~:data-readers"],null,["^59","~:infer-externs"],"~:auto",["^59","^1;"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^59","~:fn-invoke-direct"],null,["^59","~:source-map"],"/dev/null"]]]